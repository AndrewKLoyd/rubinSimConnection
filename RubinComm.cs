// <auto-generated>
//     Generated by the protocol buffer compiler.  DO NOT EDIT!
//     source: RubinComm.proto
// </auto-generated>
#pragma warning disable 1591, 0612, 3021, 8981
#region Designer generated code

using pb = global::Google.Protobuf;
using pbc = global::Google.Protobuf.Collections;
using pbr = global::Google.Protobuf.Reflection;
using scg = global::System.Collections.Generic;
namespace RubinComm {

  /// <summary>Holder for reflection information generated from RubinComm.proto</summary>
  public static partial class RubinCommReflection {

    #region Descriptor
    /// <summary>File descriptor for RubinComm.proto</summary>
    public static pbr::FileDescriptor Descriptor {
      get { return descriptor; }
    }
    private static pbr::FileDescriptor descriptor;

    static RubinCommReflection() {
      byte[] descriptorData = global::System.Convert.FromBase64String(
          string.Concat(
            "Cg9SdWJpbkNvbW0ucHJvdG8SCVJ1YmluQ29tbSJCCglHbG9iYWxQb3MSEAoI",
            "TGF0aXR1ZGUYASABKAESEQoJTG9uZ2l0dWRlGAIgASgBEhAKCEFsdGl0dWRl",
            "GAMgASgBIi4KC09yaWVudGF0aW9uEgkKAVgYASABKAISCQoBWRgCIAEoAhIJ",
            "CgFaGAMgASgCIi8KDFByb3RvVmVjdG9yMxIJCgFYGAEgASgCEgkKAVkYAiAB",
            "KAISCQoBWhgDIAEoAiLoAQoMQU5QQUNvbnRyb2xsEi8KDkxpbmVhclZlbG9j",
            "aXR5GAEgASgLMhcuUnViaW5Db21tLlByb3RvVmVjdG9yMxIuCg1Db250cm9s",
            "bEZvcmNlGAIgASgLMhcuUnViaW5Db21tLlByb3RvVmVjdG9yMxIYChBWZXJ0",
            "aWNhbFZlbG9jaXR5GAMgASgCEhYKDkRpZmZlcmVudFNlcnZvGAQgASgCEhMK",
            "C0NvdXJzZVNlcnZvGAUgASgCEhcKD01haW5FbmdpbmVQb3dlchgGIAEoAhIX",
            "Cg9Ob3NlRW5naW5lUG93ZXIYByABKAIiwwEKBEFOUEESCgoCSWQYASABKAUS",
            "JgoIUG9zaXRpb24YAiABKAsyFC5SdWJpbkNvbW0uR2xvYmFsUG9zEisKC09y",
            "aWVudGF0aW9uGAMgASgLMhYuUnViaW5Db21tLk9yaWVudGF0aW9uEhQKDFNl",
            "bnNvckJvdHRvbRgEIAEoAhITCgtTZW5zb3JGcm9udBgFIAEoAhIvCg5Db250",
            "cm9sbFZhbHVlcxgGIAEoCzIXLlJ1YmluQ29tbS5BTlBBQ29udHJvbGwinAEK",
            "CUFOUEFHcm91cBIPCgdMaWRlcklkGAEgASgFEg8KB0dyb3VwSWQYAiABKAUS",
            "LgoFQU5QQXMYAyADKAsyHy5SdWJpbkNvbW0uQU5QQUdyb3VwLkFOUEFzRW50",
            "cnkaPQoKQU5QQXNFbnRyeRILCgNrZXkYASABKAUSHgoFdmFsdWUYAiABKAsy",
            "Dy5SdWJpbkNvbW0uQU5QQToCOAEibwoFTGF5ZXISDQoFU3RlcFgYASABKAIS",
            "DQoFU3RlcFkYAiABKAISEwoLTGF5ZXJTaGlmdFgYBSABKAISEwoLTGF5ZXJT",
            "aGlmdFkYBiABKAISDAoEUm93cxgHIAEoBRIQCghDb2xsdW1ucxgIIAEoBSLq",
            "AwoMTWlzc2lvbkdyb3VwEgoKAklkGAEgASgFEi0KDVR5cGVPZk1pc3Npb24Y",
            "AiABKA4yFi5SdWJpbkNvbW0uTWlzc2lvblR5cGUSMQoFQU5QQXMYAyADKAsy",
            "Ii5SdWJpbkNvbW0uTWlzc2lvbkdyb3VwLkFOUEFzRW50cnkSGAoQRHJvcER1",
            "cmF0aW9uVGltZRgEIAEoBRIiCgRQYXRoGAUgAygLMhQuUnViaW5Db21tLkds",
            "b2JhbFBvcxIiCgRab25lGAYgAygLMhQuUnViaW5Db21tLkdsb2JhbFBvcxIT",
            "CgtNYXhWZWxvY2l0eRgHIAEoAhIgCgZMYXllcnMYCCADKAsyEC5SdWJpbkNv",
            "bW0uTGF5ZXISEgoKR3JvdXBBbmdsZRgJIAEoAhIeChZMaWRlclRyYW5zbWl0",
            "RnJlcXVlbmN5GAogASgCEg0KBVN0ZXBaGAsgASgCEhUKDVNjb3V0VmVsb2Np",
            "dHkYDCABKAISDQoFRGVwdGgYDSABKAISKwoNQ2xvc2VzdEtUU1BvcxgOIAEo",
            "CzIULlJ1YmluQ29tbS5HbG9iYWxQb3MaPQoKQU5QQXNFbnRyeRILCgNrZXkY",
            "ASABKAUSHgoFdmFsdWUYAiABKAsyDy5SdWJpbkNvbW0uQU5QQToCOAEirQEK",
            "B01pc3Npb24SLgoGR3JvdXBzGAEgAygLMh4uUnViaW5Db21tLk1pc3Npb24u",
            "R3JvdXBzRW50cnkSKgoMS1RTUG9zaXRpb25zGAIgAygLMhQuUnViaW5Db21t",
            "Lkdsb2JhbFBvcxpGCgtHcm91cHNFbnRyeRILCgNrZXkYASABKAUSJgoFdmFs",
            "dWUYAiABKAsyFy5SdWJpbkNvbW0uTWlzc2lvbkdyb3VwOgI4ASJZCghPYmpl",
            "Y3RCQhImCghQb3NpdGlvbhgBIAEoCzIULlJ1YmluQ29tbS5HbG9iYWxQb3MS",
            "JQoHQkJQb3NlcxgCIAMoCzIULlJ1YmluQ29tbS5HbG9iYWxQb3MiOAoOU2lt",
            "R2FtZU9iamVjdHMSJgoJT2JqZWN0c0JCGAEgAygLMhMuUnViaW5Db21tLk9i",
            "amVjdEJCIjUKCUFucGFFcnJvchIRCglUaW1lU3RhbXAYASABKAkSFQoNRXJy",
            "b3JEaXN0YW5jZRgCIAEoAiKQAQoKR3JvdXBFcnJvchI5CgpBbnBhc0Vycm9y",
            "GAEgAygLMiUuUnViaW5Db21tLkdyb3VwRXJyb3IuQW5wYXNFcnJvckVudHJ5",
            "GkcKD0FucGFzRXJyb3JFbnRyeRILCgNrZXkYASABKAUSIwoFdmFsdWUYAiAB",
            "KAsyFC5SdWJpbkNvbW0uQW5wYUVycm9yOgI4ASKQAQoKRHJvcFBvaW50cxI5",
            "CgpEcm9wUG9pbnRzGAEgAygLMiUuUnViaW5Db21tLkRyb3BQb2ludHMuRHJv",
            "cFBvaW50c0VudHJ5GkcKD0Ryb3BQb2ludHNFbnRyeRILCgNrZXkYASABKAUS",
            "IwoFdmFsdWUYAiABKAsyFC5SdWJpbkNvbW0uR2xvYmFsUG9zOgI4ASKDAQoQ",
            "QW5wYURpbmFtaWNNb2RlbBI9CglJc1dvcmtpbmcYASADKAsyKi5SdWJpbkNv",
            "bW0uQW5wYURpbmFtaWNNb2RlbC5Jc1dvcmtpbmdFbnRyeRowCg5Jc1dvcmtp",
            "bmdFbnRyeRILCgNrZXkYASABKAUSDQoFdmFsdWUYAiABKAg6AjgBIksKDkNv",
            "bnRyb2xsVmFsdWVzEhYKDkNvdXJzZVZlbG9jaXR5GAEgASgCEhEKCURpZmZl",
            "cmVudBgCIAEoAhIOCgZDb3Vyc2UYAyABKAIipwEKEFJlZ3VsYXRvckNvbXBs",
            "ZXgSQwoMQU5QQUNvbnRyb2xsGAEgAygLMi0uUnViaW5Db21tLlJlZ3VsYXRv",
            "ckNvbXBsZXguQU5QQUNvbnRyb2xsRW50cnkaTgoRQU5QQUNvbnRyb2xsRW50",
            "cnkSCwoDa2V5GAEgASgFEigKBXZhbHVlGAIgASgLMhkuUnViaW5Db21tLkNv",
            "bnRyb2xsVmFsdWVzOgI4ASLSAwoHU2ltSW5pdBIrCg1TaW1ab25lQ2VudGVy",
            "GAEgASgLMhQuUnViaW5Db21tLkdsb2JhbFBvcxIMCgRUaW1lGAIgASgFEhAK",
            "CEJlYXVmb3J0GAMgASgFEisKDWt0c1NwYXduUG9zZXMYBCADKAsyFC5SdWJp",
            "bkNvbW0uR2xvYmFsUG9zEiMKBUJ1b3lzGAYgAygLMhQuUnViaW5Db21tLkds",
            "b2JhbFBvcxIsCgtQcmVjaXBhdGlvbhgHIAEoDjIXLlJ1YmluQ29tbS5QcmVj",
            "aXBhdGlvbnMSEgoKQU5QQUFtb3VudBgIIAEoBRIUCgxXYXRlckRlbnNpdHkY",
            "CSABKAISEwoLVGVtcGVyYXR1cmUYCiABKAUSCwoDUFNVGAsgASgFEhEKCVR1",
            "cmJpZGl0eRgMIAEoAhIRCglFY2hvQW5nbGUYDSABKAISFAoMRWNob0Rpc3Rh",
            "bmNlGA4gASgCEg0KBUVycm9yGA8gASgCEg8KB0RlbnNpdHkYECABKAISEQoJ",
            "RnJlcXVlbmN5GBEgASgCEhUKDU5hdkRpc3RvcnRpb24YEiABKAISEAoIS1RT",
            "RGVwdGgYEyABKAISFgoOU2VhQm90dG9tRGVwdGgYFCABKAIiGQoGQ3VzdG9t",
            "Eg8KB01lc3NhZ2UYASABKAkipAEKCUFucGFJbktUUxIOCgZBTlBBSWQYASAB",
            "KA0SDQoFS1RTSWQYAiABKA0SDgoGSG9sZUlkGAMgASgNEg0KBUluS3RzGAQg",
            "ASgIEikKC0tUU1Bvc2l0aW9uGAUgASgLMhQuUnViaW5Db21tLkdsb2JhbFBv",
            "cxIuCg5LVFNPcmllbnRhdGlvbhgGIAEoCzIWLlJ1YmluQ29tbS5PcmllbnRh",
            "dGlvbiKwAgoJQU5QQUFsaXZlEgoKAklkGAEgASgFEhIKCkNvbm5lY3Rpb24Y",
            "AiABKAgSCwoDSU5TGAMgASgIEgsKA0xhZxgEIAEoCBIPCgdDb21wYXNzGAUg",
            "ASgIEhYKDlByZXNzdXJlU2Vuc29yGAYgASgIEhQKDEVjaG9sb3RGcm9udBgH",
            "IAEoCBIVCg1FY2hvbG90Qm90dG9tGAggASgIEgoKAkNWGAkgASgIEhkKEVNl",
            "aXNtaWNUb21vZ3JhcGh5GAogASgIEhoKEkZsb2F0aW5nRGlmZlNlbnNvchgL",
            "IAEoCBIWCg5BY3R1YXRvck1vZHVsZRgMIAEoCBIdChVCYXR0ZXJ5Q29udHJv",
            "bGxTeXN0ZW0YDSABKAgSGQoRQmF0dGVyeVBlcmNlbnRhZ2UYDiABKAUi8QEK",
            "E1NHUlVHcm91cFRyYWplY3RvcnkSDwoHR3JvdXBJZBgBIAEoBRItCg9Hcm91",
            "cFRyYWplY3RvcnkYAiADKAsyFC5SdWJpbkNvbW0uR2xvYmFsUG9zEkwKD0Fu",
            "cGFzVHJhamVjdG9yeRgDIAMoCzIzLlJ1YmluQ29tbS5TR1JVR3JvdXBUcmFq",
            "ZWN0b3J5LkFucGFzVHJhamVjdG9yeUVudHJ5GkwKFEFucGFzVHJhamVjdG9y",
            "eUVudHJ5EgsKA2tleRgBIAEoBRIjCgV2YWx1ZRgCIAEoCzIULlJ1YmluQ29t",
            "bS5HbG9iYWxQb3M6AjgBIpwBCglBTlBBRXZlbnQSEQoJQ291bGRTa2lwGAEg",
            "ASgIEg4KBklzQW5wYRgCIAEoCBIOCgZBTlBBSWQYAyABKAUSDwoHSXNHcm91",
            "cBgEIAEoCBIPCgdHcm91cElkGAUgASgFEicKCUV2ZW50VHlwZRgGIAEoDjIU",
            "LlJ1YmluQ29tbS5FdmVudFR5cGUSEQoJVGltZVN0YW1wGAcgASgGKv0BCglF",
            "dmVudFR5cGUSEAoMU2ltUHJlcGFyaW5nEAASDAoIU2ltUmVhZHkQARIQCgxT",
            "Y291dFN0YXJ0ZWQQAhIUChBDb21tYW5kQU5QQUZsb2F0EAMSFwoTQ29tbWFu",
            "ZEFOUEFDb21lQmFjaxAEEhUKEUNvbW1hbmRHcm91cEZsb2F0EAUSGAoUQ29t",
            "bWFuZEdyb3VwQ29tZUJhY2sQBhIQCgxTeXN0ZW1GYWlsZWQQBxIUChBVbmtu",
            "b3duRW1lcmdlbmN5EAgSGwoXRHJvcEdyb3VwUmVxdWVzdFRvRmxvYXQQCRIZ",
            "ChVDb21tYW5kRHJvcEdyb3VwRmxvYXQQCiohCgtNaXNzaW9uVHlwZRIICgRT",
            "Y2FuEAASCAoERHJvcBABKlIKDFByZWNpcGF0aW9ucxIICgRSYWluEAASCAoE",
            "SGFpbBABEgkKBVN0b3JtEAISCAoEU25vdxADEg8KC1JhaW5BbmRTbm93EAQS",
            "CAoETm9uZRAFYgZwcm90bzM="));
      descriptor = pbr::FileDescriptor.FromGeneratedCode(descriptorData,
          new pbr::FileDescriptor[] { },
          new pbr::GeneratedClrTypeInfo(new[] {typeof(global::RubinComm.EventType), typeof(global::RubinComm.MissionType), typeof(global::RubinComm.Precipations), }, null, new pbr::GeneratedClrTypeInfo[] {
            new pbr::GeneratedClrTypeInfo(typeof(global::RubinComm.GlobalPos), global::RubinComm.GlobalPos.Parser, new[]{ "Latitude", "Longitude", "Altitude" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RubinComm.Orientation), global::RubinComm.Orientation.Parser, new[]{ "X", "Y", "Z" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RubinComm.ProtoVector3), global::RubinComm.ProtoVector3.Parser, new[]{ "X", "Y", "Z" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RubinComm.ANPAControll), global::RubinComm.ANPAControll.Parser, new[]{ "LinearVelocity", "ControllForce", "VerticalVelocity", "DifferentServo", "CourseServo", "MainEnginePower", "NoseEnginePower" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RubinComm.ANPA), global::RubinComm.ANPA.Parser, new[]{ "Id", "Position", "Orientation", "SensorBottom", "SensorFront", "ControllValues" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RubinComm.ANPAGroup), global::RubinComm.ANPAGroup.Parser, new[]{ "LiderId", "GroupId", "ANPAs" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::RubinComm.Layer), global::RubinComm.Layer.Parser, new[]{ "StepX", "StepY", "LayerShiftX", "LayerShiftY", "Rows", "Collumns" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RubinComm.MissionGroup), global::RubinComm.MissionGroup.Parser, new[]{ "Id", "TypeOfMission", "ANPAs", "DropDurationTime", "Path", "Zone", "MaxVelocity", "Layers", "GroupAngle", "LiderTransmitFrequency", "StepZ", "ScoutVelocity", "Depth", "ClosestKTSPos" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::RubinComm.Mission), global::RubinComm.Mission.Parser, new[]{ "Groups", "KTSPositions" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::RubinComm.ObjectBB), global::RubinComm.ObjectBB.Parser, new[]{ "Position", "BBPoses" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RubinComm.SimGameObjects), global::RubinComm.SimGameObjects.Parser, new[]{ "ObjectsBB" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RubinComm.AnpaError), global::RubinComm.AnpaError.Parser, new[]{ "TimeStamp", "ErrorDistance" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RubinComm.GroupError), global::RubinComm.GroupError.Parser, new[]{ "AnpasError" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::RubinComm.DropPoints), global::RubinComm.DropPoints.Parser, new[]{ "DropPoints_" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::RubinComm.AnpaDinamicModel), global::RubinComm.AnpaDinamicModel.Parser, new[]{ "IsWorking" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::RubinComm.ControllValues), global::RubinComm.ControllValues.Parser, new[]{ "CourseVelocity", "Different", "Course" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RubinComm.RegulatorComplex), global::RubinComm.RegulatorComplex.Parser, new[]{ "ANPAControll" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::RubinComm.SimInit), global::RubinComm.SimInit.Parser, new[]{ "SimZoneCenter", "Time", "Beaufort", "KtsSpawnPoses", "Buoys", "Precipation", "ANPAAmount", "WaterDensity", "Temperature", "PSU", "Turbidity", "EchoAngle", "EchoDistance", "Error", "Density", "Frequency", "NavDistortion", "KTSDepth", "SeaBottomDepth" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RubinComm.Custom), global::RubinComm.Custom.Parser, new[]{ "Message" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RubinComm.AnpaInKTS), global::RubinComm.AnpaInKTS.Parser, new[]{ "ANPAId", "KTSId", "HoleId", "InKts", "KTSPosition", "KTSOrientation" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RubinComm.ANPAAlive), global::RubinComm.ANPAAlive.Parser, new[]{ "Id", "Connection", "INS", "Lag", "Compass", "PressureSensor", "EcholotFront", "EcholotBottom", "CV", "SeismicTomography", "FloatingDiffSensor", "ActuatorModule", "BatteryControllSystem", "BatteryPercentage" }, null, null, null, null),
            new pbr::GeneratedClrTypeInfo(typeof(global::RubinComm.SGRUGroupTrajectory), global::RubinComm.SGRUGroupTrajectory.Parser, new[]{ "GroupId", "GroupTrajectory", "AnpasTrajectory" }, null, null, null, new pbr::GeneratedClrTypeInfo[] { null, }),
            new pbr::GeneratedClrTypeInfo(typeof(global::RubinComm.ANPAEvent), global::RubinComm.ANPAEvent.Parser, new[]{ "CouldSkip", "IsAnpa", "ANPAId", "IsGroup", "GroupId", "EventType", "TimeStamp" }, null, null, null, null)
          }));
    }
    #endregion

  }
  #region Enums
  public enum EventType {
    /// <summary>
    /// Sim is now preparing for mission 
    /// </summary>
    [pbr::OriginalName("SimPreparing")] SimPreparing = 0,
    /// <summary>
    /// SIm ready for mission
    /// </summary>
    [pbr::OriginalName("SimReady")] SimReady = 1,
    /// <summary>
    /// GRP started to scout
    /// </summary>
    [pbr::OriginalName("ScoutStarted")] ScoutStarted = 2,
    /// <summary>
    /// Command to ANPA to immediately float
    /// </summary>
    [pbr::OriginalName("CommandANPAFloat")] CommandAnpafloat = 3,
    /// <summary>
    /// Command to ANPA to immediately come back to base   
    /// </summary>
    [pbr::OriginalName("CommandANPAComeBack")] CommandAnpacomeBack = 4,
    /// <summary>
    /// Command to GRP to immediately float
    /// </summary>
    [pbr::OriginalName("CommandGroupFloat")] CommandGroupFloat = 5,
    /// <summary>
    /// Command to GRP to immediately come back to base   
    /// </summary>
    [pbr::OriginalName("CommandGroupComeBack")] CommandGroupComeBack = 6,
    /// <summary>
    /// Some system failed in ANPA
    /// </summary>
    [pbr::OriginalName("SystemFailed")] SystemFailed = 7,
    /// <summary>
    /// Something went wrong with ANPA (No idea what)
    /// </summary>
    [pbr::OriginalName("UnknownEmergency")] UnknownEmergency = 8,
    /// <summary>
    /// GRP finished it's mission of scanning and requesting to come back to base
    /// </summary>
    [pbr::OriginalName("DropGroupRequestToFloat")] DropGroupRequestToFloat = 9,
    [pbr::OriginalName("CommandDropGroupFloat")] CommandDropGroupFloat = 10,
  }

  public enum MissionType {
    [pbr::OriginalName("Scan")] Scan = 0,
    [pbr::OriginalName("Drop")] Drop = 1,
  }

  public enum Precipations {
    [pbr::OriginalName("Rain")] Rain = 0,
    [pbr::OriginalName("Hail")] Hail = 1,
    [pbr::OriginalName("Storm")] Storm = 2,
    [pbr::OriginalName("Snow")] Snow = 3,
    [pbr::OriginalName("RainAndSnow")] RainAndSnow = 4,
    [pbr::OriginalName("None")] None = 5,
  }

  #endregion

  #region Messages
  public sealed partial class GlobalPos : pb::IMessage<GlobalPos>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GlobalPos> _parser = new pb::MessageParser<GlobalPos>(() => new GlobalPos());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GlobalPos> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RubinComm.RubinCommReflection.Descriptor.MessageTypes[0]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GlobalPos() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GlobalPos(GlobalPos other) : this() {
      latitude_ = other.latitude_;
      longitude_ = other.longitude_;
      altitude_ = other.altitude_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GlobalPos Clone() {
      return new GlobalPos(this);
    }

    /// <summary>Field number for the "Latitude" field.</summary>
    public const int LatitudeFieldNumber = 1;
    private double latitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Latitude {
      get { return latitude_; }
      set {
        latitude_ = value;
      }
    }

    /// <summary>Field number for the "Longitude" field.</summary>
    public const int LongitudeFieldNumber = 2;
    private double longitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Longitude {
      get { return longitude_; }
      set {
        longitude_ = value;
      }
    }

    /// <summary>Field number for the "Altitude" field.</summary>
    public const int AltitudeFieldNumber = 3;
    private double altitude_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public double Altitude {
      get { return altitude_; }
      set {
        altitude_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GlobalPos);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GlobalPos other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Latitude, other.Latitude)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Longitude, other.Longitude)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.Equals(Altitude, other.Altitude)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Latitude != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Latitude);
      if (Longitude != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Longitude);
      if (Altitude != 0D) hash ^= pbc::ProtobufEqualityComparers.BitwiseDoubleEqualityComparer.GetHashCode(Altitude);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Latitude != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Latitude);
      }
      if (Longitude != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Longitude);
      }
      if (Altitude != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Altitude);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Latitude != 0D) {
        output.WriteRawTag(9);
        output.WriteDouble(Latitude);
      }
      if (Longitude != 0D) {
        output.WriteRawTag(17);
        output.WriteDouble(Longitude);
      }
      if (Altitude != 0D) {
        output.WriteRawTag(25);
        output.WriteDouble(Altitude);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Latitude != 0D) {
        size += 1 + 8;
      }
      if (Longitude != 0D) {
        size += 1 + 8;
      }
      if (Altitude != 0D) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GlobalPos other) {
      if (other == null) {
        return;
      }
      if (other.Latitude != 0D) {
        Latitude = other.Latitude;
      }
      if (other.Longitude != 0D) {
        Longitude = other.Longitude;
      }
      if (other.Altitude != 0D) {
        Altitude = other.Altitude;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 9: {
            Latitude = input.ReadDouble();
            break;
          }
          case 17: {
            Longitude = input.ReadDouble();
            break;
          }
          case 25: {
            Altitude = input.ReadDouble();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 9: {
            Latitude = input.ReadDouble();
            break;
          }
          case 17: {
            Longitude = input.ReadDouble();
            break;
          }
          case 25: {
            Altitude = input.ReadDouble();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Or rotation
  /// </summary>
  public sealed partial class Orientation : pb::IMessage<Orientation>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Orientation> _parser = new pb::MessageParser<Orientation>(() => new Orientation());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Orientation> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RubinComm.RubinCommReflection.Descriptor.MessageTypes[1]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Orientation() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Orientation(Orientation other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Orientation Clone() {
      return new Orientation(this);
    }

    /// <summary>Field number for the "X" field.</summary>
    public const int XFieldNumber = 1;
    private float x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "Y" field.</summary>
    public const int YFieldNumber = 2;
    private float y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "Z" field.</summary>
    public const int ZFieldNumber = 3;
    private float z_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Orientation);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Orientation other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (Z != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (X != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Z);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (X != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Z);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (X != 0F) {
        size += 1 + 4;
      }
      if (Y != 0F) {
        size += 1 + 4;
      }
      if (Z != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Orientation other) {
      if (other == null) {
        return;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      if (other.Z != 0F) {
        Z = other.Z;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
          case 29: {
            Z = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
          case 29: {
            Z = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ProtoVector3 : pb::IMessage<ProtoVector3>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ProtoVector3> _parser = new pb::MessageParser<ProtoVector3>(() => new ProtoVector3());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ProtoVector3> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RubinComm.RubinCommReflection.Descriptor.MessageTypes[2]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProtoVector3() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProtoVector3(ProtoVector3 other) : this() {
      x_ = other.x_;
      y_ = other.y_;
      z_ = other.z_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ProtoVector3 Clone() {
      return new ProtoVector3(this);
    }

    /// <summary>Field number for the "X" field.</summary>
    public const int XFieldNumber = 1;
    private float x_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float X {
      get { return x_; }
      set {
        x_ = value;
      }
    }

    /// <summary>Field number for the "Y" field.</summary>
    public const int YFieldNumber = 2;
    private float y_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Y {
      get { return y_; }
      set {
        y_ = value;
      }
    }

    /// <summary>Field number for the "Z" field.</summary>
    public const int ZFieldNumber = 3;
    private float z_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Z {
      get { return z_; }
      set {
        z_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ProtoVector3);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ProtoVector3 other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(X, other.X)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Y, other.Y)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Z, other.Z)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (X != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(X);
      if (Y != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Y);
      if (Z != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Z);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (X != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Z);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (X != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(X);
      }
      if (Y != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Y);
      }
      if (Z != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Z);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (X != 0F) {
        size += 1 + 4;
      }
      if (Y != 0F) {
        size += 1 + 4;
      }
      if (Z != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ProtoVector3 other) {
      if (other == null) {
        return;
      }
      if (other.X != 0F) {
        X = other.X;
      }
      if (other.Y != 0F) {
        Y = other.Y;
      }
      if (other.Z != 0F) {
        Z = other.Z;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
          case 29: {
            Z = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            X = input.ReadFloat();
            break;
          }
          case 21: {
            Y = input.ReadFloat();
            break;
          }
          case 29: {
            Z = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Here lays controll vals from anpa motors and etc.
  /// </summary>
  public sealed partial class ANPAControll : pb::IMessage<ANPAControll>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ANPAControll> _parser = new pb::MessageParser<ANPAControll>(() => new ANPAControll());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ANPAControll> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RubinComm.RubinCommReflection.Descriptor.MessageTypes[3]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ANPAControll() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ANPAControll(ANPAControll other) : this() {
      linearVelocity_ = other.linearVelocity_ != null ? other.linearVelocity_.Clone() : null;
      controllForce_ = other.controllForce_ != null ? other.controllForce_.Clone() : null;
      verticalVelocity_ = other.verticalVelocity_;
      differentServo_ = other.differentServo_;
      courseServo_ = other.courseServo_;
      mainEnginePower_ = other.mainEnginePower_;
      noseEnginePower_ = other.noseEnginePower_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ANPAControll Clone() {
      return new ANPAControll(this);
    }

    /// <summary>Field number for the "LinearVelocity" field.</summary>
    public const int LinearVelocityFieldNumber = 1;
    private global::RubinComm.ProtoVector3 linearVelocity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RubinComm.ProtoVector3 LinearVelocity {
      get { return linearVelocity_; }
      set {
        linearVelocity_ = value;
      }
    }

    /// <summary>Field number for the "ControllForce" field.</summary>
    public const int ControllForceFieldNumber = 2;
    private global::RubinComm.ProtoVector3 controllForce_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RubinComm.ProtoVector3 ControllForce {
      get { return controllForce_; }
      set {
        controllForce_ = value;
      }
    }

    /// <summary>Field number for the "VerticalVelocity" field.</summary>
    public const int VerticalVelocityFieldNumber = 3;
    private float verticalVelocity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float VerticalVelocity {
      get { return verticalVelocity_; }
      set {
        verticalVelocity_ = value;
      }
    }

    /// <summary>Field number for the "DifferentServo" field.</summary>
    public const int DifferentServoFieldNumber = 4;
    private float differentServo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float DifferentServo {
      get { return differentServo_; }
      set {
        differentServo_ = value;
      }
    }

    /// <summary>Field number for the "CourseServo" field.</summary>
    public const int CourseServoFieldNumber = 5;
    private float courseServo_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float CourseServo {
      get { return courseServo_; }
      set {
        courseServo_ = value;
      }
    }

    /// <summary>Field number for the "MainEnginePower" field.</summary>
    public const int MainEnginePowerFieldNumber = 6;
    private float mainEnginePower_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MainEnginePower {
      get { return mainEnginePower_; }
      set {
        mainEnginePower_ = value;
      }
    }

    /// <summary>Field number for the "NoseEnginePower" field.</summary>
    public const int NoseEnginePowerFieldNumber = 7;
    private float noseEnginePower_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float NoseEnginePower {
      get { return noseEnginePower_; }
      set {
        noseEnginePower_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ANPAControll);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ANPAControll other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(LinearVelocity, other.LinearVelocity)) return false;
      if (!object.Equals(ControllForce, other.ControllForce)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(VerticalVelocity, other.VerticalVelocity)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(DifferentServo, other.DifferentServo)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CourseServo, other.CourseServo)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MainEnginePower, other.MainEnginePower)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(NoseEnginePower, other.NoseEnginePower)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (linearVelocity_ != null) hash ^= LinearVelocity.GetHashCode();
      if (controllForce_ != null) hash ^= ControllForce.GetHashCode();
      if (VerticalVelocity != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(VerticalVelocity);
      if (DifferentServo != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(DifferentServo);
      if (CourseServo != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CourseServo);
      if (MainEnginePower != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MainEnginePower);
      if (NoseEnginePower != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(NoseEnginePower);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (linearVelocity_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LinearVelocity);
      }
      if (controllForce_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ControllForce);
      }
      if (VerticalVelocity != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(VerticalVelocity);
      }
      if (DifferentServo != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(DifferentServo);
      }
      if (CourseServo != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(CourseServo);
      }
      if (MainEnginePower != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(MainEnginePower);
      }
      if (NoseEnginePower != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(NoseEnginePower);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (linearVelocity_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(LinearVelocity);
      }
      if (controllForce_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(ControllForce);
      }
      if (VerticalVelocity != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(VerticalVelocity);
      }
      if (DifferentServo != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(DifferentServo);
      }
      if (CourseServo != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(CourseServo);
      }
      if (MainEnginePower != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(MainEnginePower);
      }
      if (NoseEnginePower != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(NoseEnginePower);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (linearVelocity_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(LinearVelocity);
      }
      if (controllForce_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ControllForce);
      }
      if (VerticalVelocity != 0F) {
        size += 1 + 4;
      }
      if (DifferentServo != 0F) {
        size += 1 + 4;
      }
      if (CourseServo != 0F) {
        size += 1 + 4;
      }
      if (MainEnginePower != 0F) {
        size += 1 + 4;
      }
      if (NoseEnginePower != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ANPAControll other) {
      if (other == null) {
        return;
      }
      if (other.linearVelocity_ != null) {
        if (linearVelocity_ == null) {
          LinearVelocity = new global::RubinComm.ProtoVector3();
        }
        LinearVelocity.MergeFrom(other.LinearVelocity);
      }
      if (other.controllForce_ != null) {
        if (controllForce_ == null) {
          ControllForce = new global::RubinComm.ProtoVector3();
        }
        ControllForce.MergeFrom(other.ControllForce);
      }
      if (other.VerticalVelocity != 0F) {
        VerticalVelocity = other.VerticalVelocity;
      }
      if (other.DifferentServo != 0F) {
        DifferentServo = other.DifferentServo;
      }
      if (other.CourseServo != 0F) {
        CourseServo = other.CourseServo;
      }
      if (other.MainEnginePower != 0F) {
        MainEnginePower = other.MainEnginePower;
      }
      if (other.NoseEnginePower != 0F) {
        NoseEnginePower = other.NoseEnginePower;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (linearVelocity_ == null) {
              LinearVelocity = new global::RubinComm.ProtoVector3();
            }
            input.ReadMessage(LinearVelocity);
            break;
          }
          case 18: {
            if (controllForce_ == null) {
              ControllForce = new global::RubinComm.ProtoVector3();
            }
            input.ReadMessage(ControllForce);
            break;
          }
          case 29: {
            VerticalVelocity = input.ReadFloat();
            break;
          }
          case 37: {
            DifferentServo = input.ReadFloat();
            break;
          }
          case 45: {
            CourseServo = input.ReadFloat();
            break;
          }
          case 53: {
            MainEnginePower = input.ReadFloat();
            break;
          }
          case 61: {
            NoseEnginePower = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (linearVelocity_ == null) {
              LinearVelocity = new global::RubinComm.ProtoVector3();
            }
            input.ReadMessage(LinearVelocity);
            break;
          }
          case 18: {
            if (controllForce_ == null) {
              ControllForce = new global::RubinComm.ProtoVector3();
            }
            input.ReadMessage(ControllForce);
            break;
          }
          case 29: {
            VerticalVelocity = input.ReadFloat();
            break;
          }
          case 37: {
            DifferentServo = input.ReadFloat();
            break;
          }
          case 45: {
            CourseServo = input.ReadFloat();
            break;
          }
          case 53: {
            MainEnginePower = input.ReadFloat();
            break;
          }
          case 61: {
            NoseEnginePower = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ANPA : pb::IMessage<ANPA>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ANPA> _parser = new pb::MessageParser<ANPA>(() => new ANPA());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ANPA> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RubinComm.RubinCommReflection.Descriptor.MessageTypes[4]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ANPA() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ANPA(ANPA other) : this() {
      id_ = other.id_;
      position_ = other.position_ != null ? other.position_.Clone() : null;
      orientation_ = other.orientation_ != null ? other.orientation_.Clone() : null;
      sensorBottom_ = other.sensorBottom_;
      sensorFront_ = other.sensorFront_;
      controllValues_ = other.controllValues_ != null ? other.controllValues_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ANPA Clone() {
      return new ANPA(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "Position" field.</summary>
    public const int PositionFieldNumber = 2;
    private global::RubinComm.GlobalPos position_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RubinComm.GlobalPos Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "Orientation" field.</summary>
    public const int OrientationFieldNumber = 3;
    private global::RubinComm.Orientation orientation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RubinComm.Orientation Orientation {
      get { return orientation_; }
      set {
        orientation_ = value;
      }
    }

    /// <summary>Field number for the "SensorBottom" field.</summary>
    public const int SensorBottomFieldNumber = 4;
    private float sensorBottom_;
    /// <summary>
    /// Bottom echolot
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SensorBottom {
      get { return sensorBottom_; }
      set {
        sensorBottom_ = value;
      }
    }

    /// <summary>Field number for the "SensorFront" field.</summary>
    public const int SensorFrontFieldNumber = 5;
    private float sensorFront_;
    /// <summary>
    /// Front echolot
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SensorFront {
      get { return sensorFront_; }
      set {
        sensorFront_ = value;
      }
    }

    /// <summary>Field number for the "ControllValues" field.</summary>
    public const int ControllValuesFieldNumber = 6;
    private global::RubinComm.ANPAControll controllValues_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RubinComm.ANPAControll ControllValues {
      get { return controllValues_; }
      set {
        controllValues_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ANPA);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ANPA other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (!object.Equals(Position, other.Position)) return false;
      if (!object.Equals(Orientation, other.Orientation)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SensorBottom, other.SensorBottom)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SensorFront, other.SensorFront)) return false;
      if (!object.Equals(ControllValues, other.ControllValues)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (position_ != null) hash ^= Position.GetHashCode();
      if (orientation_ != null) hash ^= Orientation.GetHashCode();
      if (SensorBottom != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SensorBottom);
      if (SensorFront != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SensorFront);
      if (controllValues_ != null) hash ^= ControllValues.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (position_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Position);
      }
      if (orientation_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Orientation);
      }
      if (SensorBottom != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(SensorBottom);
      }
      if (SensorFront != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(SensorFront);
      }
      if (controllValues_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ControllValues);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (position_ != null) {
        output.WriteRawTag(18);
        output.WriteMessage(Position);
      }
      if (orientation_ != null) {
        output.WriteRawTag(26);
        output.WriteMessage(Orientation);
      }
      if (SensorBottom != 0F) {
        output.WriteRawTag(37);
        output.WriteFloat(SensorBottom);
      }
      if (SensorFront != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(SensorFront);
      }
      if (controllValues_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(ControllValues);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      if (orientation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Orientation);
      }
      if (SensorBottom != 0F) {
        size += 1 + 4;
      }
      if (SensorFront != 0F) {
        size += 1 + 4;
      }
      if (controllValues_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ControllValues);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ANPA other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          Position = new global::RubinComm.GlobalPos();
        }
        Position.MergeFrom(other.Position);
      }
      if (other.orientation_ != null) {
        if (orientation_ == null) {
          Orientation = new global::RubinComm.Orientation();
        }
        Orientation.MergeFrom(other.Orientation);
      }
      if (other.SensorBottom != 0F) {
        SensorBottom = other.SensorBottom;
      }
      if (other.SensorFront != 0F) {
        SensorFront = other.SensorFront;
      }
      if (other.controllValues_ != null) {
        if (controllValues_ == null) {
          ControllValues = new global::RubinComm.ANPAControll();
        }
        ControllValues.MergeFrom(other.ControllValues);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            if (position_ == null) {
              Position = new global::RubinComm.GlobalPos();
            }
            input.ReadMessage(Position);
            break;
          }
          case 26: {
            if (orientation_ == null) {
              Orientation = new global::RubinComm.Orientation();
            }
            input.ReadMessage(Orientation);
            break;
          }
          case 37: {
            SensorBottom = input.ReadFloat();
            break;
          }
          case 45: {
            SensorFront = input.ReadFloat();
            break;
          }
          case 50: {
            if (controllValues_ == null) {
              ControllValues = new global::RubinComm.ANPAControll();
            }
            input.ReadMessage(ControllValues);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 18: {
            if (position_ == null) {
              Position = new global::RubinComm.GlobalPos();
            }
            input.ReadMessage(Position);
            break;
          }
          case 26: {
            if (orientation_ == null) {
              Orientation = new global::RubinComm.Orientation();
            }
            input.ReadMessage(Orientation);
            break;
          }
          case 37: {
            SensorBottom = input.ReadFloat();
            break;
          }
          case 45: {
            SensorFront = input.ReadFloat();
            break;
          }
          case 50: {
            if (controllValues_ == null) {
              ControllValues = new global::RubinComm.ANPAControll();
            }
            input.ReadMessage(ControllValues);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ANPAGroup : pb::IMessage<ANPAGroup>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ANPAGroup> _parser = new pb::MessageParser<ANPAGroup>(() => new ANPAGroup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ANPAGroup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RubinComm.RubinCommReflection.Descriptor.MessageTypes[5]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ANPAGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ANPAGroup(ANPAGroup other) : this() {
      liderId_ = other.liderId_;
      groupId_ = other.groupId_;
      aNPAs_ = other.aNPAs_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ANPAGroup Clone() {
      return new ANPAGroup(this);
    }

    /// <summary>Field number for the "LiderId" field.</summary>
    public const int LiderIdFieldNumber = 1;
    private int liderId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int LiderId {
      get { return liderId_; }
      set {
        liderId_ = value;
      }
    }

    /// <summary>Field number for the "GroupId" field.</summary>
    public const int GroupIdFieldNumber = 2;
    private int groupId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GroupId {
      get { return groupId_; }
      set {
        groupId_ = value;
      }
    }

    /// <summary>Field number for the "ANPAs" field.</summary>
    public const int ANPAsFieldNumber = 3;
    private static readonly pbc::MapField<int, global::RubinComm.ANPA>.Codec _map_aNPAs_codec
        = new pbc::MapField<int, global::RubinComm.ANPA>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::RubinComm.ANPA.Parser), 26);
    private readonly pbc::MapField<int, global::RubinComm.ANPA> aNPAs_ = new pbc::MapField<int, global::RubinComm.ANPA>();
    /// <summary>
    /// List of all ANPAs where key is ANPAs id
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<int, global::RubinComm.ANPA> ANPAs {
      get { return aNPAs_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ANPAGroup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ANPAGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (LiderId != other.LiderId) return false;
      if (GroupId != other.GroupId) return false;
      if (!ANPAs.Equals(other.ANPAs)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (LiderId != 0) hash ^= LiderId.GetHashCode();
      if (GroupId != 0) hash ^= GroupId.GetHashCode();
      hash ^= ANPAs.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (LiderId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(LiderId);
      }
      if (GroupId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(GroupId);
      }
      aNPAs_.WriteTo(output, _map_aNPAs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (LiderId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(LiderId);
      }
      if (GroupId != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(GroupId);
      }
      aNPAs_.WriteTo(ref output, _map_aNPAs_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (LiderId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(LiderId);
      }
      if (GroupId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GroupId);
      }
      size += aNPAs_.CalculateSize(_map_aNPAs_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ANPAGroup other) {
      if (other == null) {
        return;
      }
      if (other.LiderId != 0) {
        LiderId = other.LiderId;
      }
      if (other.GroupId != 0) {
        GroupId = other.GroupId;
      }
      aNPAs_.Add(other.aNPAs_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            LiderId = input.ReadInt32();
            break;
          }
          case 16: {
            GroupId = input.ReadInt32();
            break;
          }
          case 26: {
            aNPAs_.AddEntriesFrom(input, _map_aNPAs_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            LiderId = input.ReadInt32();
            break;
          }
          case 16: {
            GroupId = input.ReadInt32();
            break;
          }
          case 26: {
            aNPAs_.AddEntriesFrom(ref input, _map_aNPAs_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Layer : pb::IMessage<Layer>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Layer> _parser = new pb::MessageParser<Layer>(() => new Layer());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Layer> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RubinComm.RubinCommReflection.Descriptor.MessageTypes[6]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Layer() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Layer(Layer other) : this() {
      stepX_ = other.stepX_;
      stepY_ = other.stepY_;
      layerShiftX_ = other.layerShiftX_;
      layerShiftY_ = other.layerShiftY_;
      rows_ = other.rows_;
      collumns_ = other.collumns_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Layer Clone() {
      return new Layer(this);
    }

    /// <summary>Field number for the "StepX" field.</summary>
    public const int StepXFieldNumber = 1;
    private float stepX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float StepX {
      get { return stepX_; }
      set {
        stepX_ = value;
      }
    }

    /// <summary>Field number for the "StepY" field.</summary>
    public const int StepYFieldNumber = 2;
    private float stepY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float StepY {
      get { return stepY_; }
      set {
        stepY_ = value;
      }
    }

    /// <summary>Field number for the "LayerShiftX" field.</summary>
    public const int LayerShiftXFieldNumber = 5;
    private float layerShiftX_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float LayerShiftX {
      get { return layerShiftX_; }
      set {
        layerShiftX_ = value;
      }
    }

    /// <summary>Field number for the "LayerShiftY" field.</summary>
    public const int LayerShiftYFieldNumber = 6;
    private float layerShiftY_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float LayerShiftY {
      get { return layerShiftY_; }
      set {
        layerShiftY_ = value;
      }
    }

    /// <summary>Field number for the "Rows" field.</summary>
    public const int RowsFieldNumber = 7;
    private int rows_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Rows {
      get { return rows_; }
      set {
        rows_ = value;
      }
    }

    /// <summary>Field number for the "Collumns" field.</summary>
    public const int CollumnsFieldNumber = 8;
    private int collumns_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Collumns {
      get { return collumns_; }
      set {
        collumns_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Layer);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Layer other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(StepX, other.StepX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(StepY, other.StepY)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(LayerShiftX, other.LayerShiftX)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(LayerShiftY, other.LayerShiftY)) return false;
      if (Rows != other.Rows) return false;
      if (Collumns != other.Collumns) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (StepX != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(StepX);
      if (StepY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(StepY);
      if (LayerShiftX != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(LayerShiftX);
      if (LayerShiftY != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(LayerShiftY);
      if (Rows != 0) hash ^= Rows.GetHashCode();
      if (Collumns != 0) hash ^= Collumns.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (StepX != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(StepX);
      }
      if (StepY != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(StepY);
      }
      if (LayerShiftX != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(LayerShiftX);
      }
      if (LayerShiftY != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(LayerShiftY);
      }
      if (Rows != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Rows);
      }
      if (Collumns != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Collumns);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (StepX != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(StepX);
      }
      if (StepY != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(StepY);
      }
      if (LayerShiftX != 0F) {
        output.WriteRawTag(45);
        output.WriteFloat(LayerShiftX);
      }
      if (LayerShiftY != 0F) {
        output.WriteRawTag(53);
        output.WriteFloat(LayerShiftY);
      }
      if (Rows != 0) {
        output.WriteRawTag(56);
        output.WriteInt32(Rows);
      }
      if (Collumns != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(Collumns);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (StepX != 0F) {
        size += 1 + 4;
      }
      if (StepY != 0F) {
        size += 1 + 4;
      }
      if (LayerShiftX != 0F) {
        size += 1 + 4;
      }
      if (LayerShiftY != 0F) {
        size += 1 + 4;
      }
      if (Rows != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Rows);
      }
      if (Collumns != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Collumns);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Layer other) {
      if (other == null) {
        return;
      }
      if (other.StepX != 0F) {
        StepX = other.StepX;
      }
      if (other.StepY != 0F) {
        StepY = other.StepY;
      }
      if (other.LayerShiftX != 0F) {
        LayerShiftX = other.LayerShiftX;
      }
      if (other.LayerShiftY != 0F) {
        LayerShiftY = other.LayerShiftY;
      }
      if (other.Rows != 0) {
        Rows = other.Rows;
      }
      if (other.Collumns != 0) {
        Collumns = other.Collumns;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            StepX = input.ReadFloat();
            break;
          }
          case 21: {
            StepY = input.ReadFloat();
            break;
          }
          case 45: {
            LayerShiftX = input.ReadFloat();
            break;
          }
          case 53: {
            LayerShiftY = input.ReadFloat();
            break;
          }
          case 56: {
            Rows = input.ReadInt32();
            break;
          }
          case 64: {
            Collumns = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            StepX = input.ReadFloat();
            break;
          }
          case 21: {
            StepY = input.ReadFloat();
            break;
          }
          case 45: {
            LayerShiftX = input.ReadFloat();
            break;
          }
          case 53: {
            LayerShiftY = input.ReadFloat();
            break;
          }
          case 56: {
            Rows = input.ReadInt32();
            break;
          }
          case 64: {
            Collumns = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class MissionGroup : pb::IMessage<MissionGroup>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<MissionGroup> _parser = new pb::MessageParser<MissionGroup>(() => new MissionGroup());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<MissionGroup> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RubinComm.RubinCommReflection.Descriptor.MessageTypes[7]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MissionGroup() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MissionGroup(MissionGroup other) : this() {
      id_ = other.id_;
      typeOfMission_ = other.typeOfMission_;
      aNPAs_ = other.aNPAs_.Clone();
      dropDurationTime_ = other.dropDurationTime_;
      path_ = other.path_.Clone();
      zone_ = other.zone_.Clone();
      maxVelocity_ = other.maxVelocity_;
      layers_ = other.layers_.Clone();
      groupAngle_ = other.groupAngle_;
      liderTransmitFrequency_ = other.liderTransmitFrequency_;
      stepZ_ = other.stepZ_;
      scoutVelocity_ = other.scoutVelocity_;
      depth_ = other.depth_;
      closestKTSPos_ = other.closestKTSPos_ != null ? other.closestKTSPos_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public MissionGroup Clone() {
      return new MissionGroup(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "TypeOfMission" field.</summary>
    public const int TypeOfMissionFieldNumber = 2;
    private global::RubinComm.MissionType typeOfMission_ = global::RubinComm.MissionType.Scan;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RubinComm.MissionType TypeOfMission {
      get { return typeOfMission_; }
      set {
        typeOfMission_ = value;
      }
    }

    /// <summary>Field number for the "ANPAs" field.</summary>
    public const int ANPAsFieldNumber = 3;
    private static readonly pbc::MapField<int, global::RubinComm.ANPA>.Codec _map_aNPAs_codec
        = new pbc::MapField<int, global::RubinComm.ANPA>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::RubinComm.ANPA.Parser), 26);
    private readonly pbc::MapField<int, global::RubinComm.ANPA> aNPAs_ = new pbc::MapField<int, global::RubinComm.ANPA>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<int, global::RubinComm.ANPA> ANPAs {
      get { return aNPAs_; }
    }

    /// <summary>Field number for the "DropDurationTime" field.</summary>
    public const int DropDurationTimeFieldNumber = 4;
    private int dropDurationTime_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int DropDurationTime {
      get { return dropDurationTime_; }
      set {
        dropDurationTime_ = value;
      }
    }

    /// <summary>Field number for the "Path" field.</summary>
    public const int PathFieldNumber = 5;
    private static readonly pb::FieldCodec<global::RubinComm.GlobalPos> _repeated_path_codec
        = pb::FieldCodec.ForMessage(42, global::RubinComm.GlobalPos.Parser);
    private readonly pbc::RepeatedField<global::RubinComm.GlobalPos> path_ = new pbc::RepeatedField<global::RubinComm.GlobalPos>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RubinComm.GlobalPos> Path {
      get { return path_; }
    }

    /// <summary>Field number for the "Zone" field.</summary>
    public const int ZoneFieldNumber = 6;
    private static readonly pb::FieldCodec<global::RubinComm.GlobalPos> _repeated_zone_codec
        = pb::FieldCodec.ForMessage(50, global::RubinComm.GlobalPos.Parser);
    private readonly pbc::RepeatedField<global::RubinComm.GlobalPos> zone_ = new pbc::RepeatedField<global::RubinComm.GlobalPos>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RubinComm.GlobalPos> Zone {
      get { return zone_; }
    }

    /// <summary>Field number for the "MaxVelocity" field.</summary>
    public const int MaxVelocityFieldNumber = 7;
    private float maxVelocity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float MaxVelocity {
      get { return maxVelocity_; }
      set {
        maxVelocity_ = value;
      }
    }

    /// <summary>Field number for the "Layers" field.</summary>
    public const int LayersFieldNumber = 8;
    private static readonly pb::FieldCodec<global::RubinComm.Layer> _repeated_layers_codec
        = pb::FieldCodec.ForMessage(66, global::RubinComm.Layer.Parser);
    private readonly pbc::RepeatedField<global::RubinComm.Layer> layers_ = new pbc::RepeatedField<global::RubinComm.Layer>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RubinComm.Layer> Layers {
      get { return layers_; }
    }

    /// <summary>Field number for the "GroupAngle" field.</summary>
    public const int GroupAngleFieldNumber = 9;
    private float groupAngle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float GroupAngle {
      get { return groupAngle_; }
      set {
        groupAngle_ = value;
      }
    }

    /// <summary>Field number for the "LiderTransmitFrequency" field.</summary>
    public const int LiderTransmitFrequencyFieldNumber = 10;
    private float liderTransmitFrequency_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float LiderTransmitFrequency {
      get { return liderTransmitFrequency_; }
      set {
        liderTransmitFrequency_ = value;
      }
    }

    /// <summary>Field number for the "StepZ" field.</summary>
    public const int StepZFieldNumber = 11;
    private float stepZ_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float StepZ {
      get { return stepZ_; }
      set {
        stepZ_ = value;
      }
    }

    /// <summary>Field number for the "ScoutVelocity" field.</summary>
    public const int ScoutVelocityFieldNumber = 12;
    private float scoutVelocity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ScoutVelocity {
      get { return scoutVelocity_; }
      set {
        scoutVelocity_ = value;
      }
    }

    /// <summary>Field number for the "Depth" field.</summary>
    public const int DepthFieldNumber = 13;
    private float depth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Depth {
      get { return depth_; }
      set {
        depth_ = value;
      }
    }

    /// <summary>Field number for the "ClosestKTSPos" field.</summary>
    public const int ClosestKTSPosFieldNumber = 14;
    private global::RubinComm.GlobalPos closestKTSPos_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RubinComm.GlobalPos ClosestKTSPos {
      get { return closestKTSPos_; }
      set {
        closestKTSPos_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as MissionGroup);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(MissionGroup other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (TypeOfMission != other.TypeOfMission) return false;
      if (!ANPAs.Equals(other.ANPAs)) return false;
      if (DropDurationTime != other.DropDurationTime) return false;
      if(!path_.Equals(other.path_)) return false;
      if(!zone_.Equals(other.zone_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(MaxVelocity, other.MaxVelocity)) return false;
      if(!layers_.Equals(other.layers_)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(GroupAngle, other.GroupAngle)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(LiderTransmitFrequency, other.LiderTransmitFrequency)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(StepZ, other.StepZ)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ScoutVelocity, other.ScoutVelocity)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Depth, other.Depth)) return false;
      if (!object.Equals(ClosestKTSPos, other.ClosestKTSPos)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (TypeOfMission != global::RubinComm.MissionType.Scan) hash ^= TypeOfMission.GetHashCode();
      hash ^= ANPAs.GetHashCode();
      if (DropDurationTime != 0) hash ^= DropDurationTime.GetHashCode();
      hash ^= path_.GetHashCode();
      hash ^= zone_.GetHashCode();
      if (MaxVelocity != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(MaxVelocity);
      hash ^= layers_.GetHashCode();
      if (GroupAngle != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(GroupAngle);
      if (LiderTransmitFrequency != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(LiderTransmitFrequency);
      if (StepZ != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(StepZ);
      if (ScoutVelocity != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ScoutVelocity);
      if (Depth != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Depth);
      if (closestKTSPos_ != null) hash ^= ClosestKTSPos.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (TypeOfMission != global::RubinComm.MissionType.Scan) {
        output.WriteRawTag(16);
        output.WriteEnum((int) TypeOfMission);
      }
      aNPAs_.WriteTo(output, _map_aNPAs_codec);
      if (DropDurationTime != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(DropDurationTime);
      }
      path_.WriteTo(output, _repeated_path_codec);
      zone_.WriteTo(output, _repeated_zone_codec);
      if (MaxVelocity != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(MaxVelocity);
      }
      layers_.WriteTo(output, _repeated_layers_codec);
      if (GroupAngle != 0F) {
        output.WriteRawTag(77);
        output.WriteFloat(GroupAngle);
      }
      if (LiderTransmitFrequency != 0F) {
        output.WriteRawTag(85);
        output.WriteFloat(LiderTransmitFrequency);
      }
      if (StepZ != 0F) {
        output.WriteRawTag(93);
        output.WriteFloat(StepZ);
      }
      if (ScoutVelocity != 0F) {
        output.WriteRawTag(101);
        output.WriteFloat(ScoutVelocity);
      }
      if (Depth != 0F) {
        output.WriteRawTag(109);
        output.WriteFloat(Depth);
      }
      if (closestKTSPos_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(ClosestKTSPos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (TypeOfMission != global::RubinComm.MissionType.Scan) {
        output.WriteRawTag(16);
        output.WriteEnum((int) TypeOfMission);
      }
      aNPAs_.WriteTo(ref output, _map_aNPAs_codec);
      if (DropDurationTime != 0) {
        output.WriteRawTag(32);
        output.WriteInt32(DropDurationTime);
      }
      path_.WriteTo(ref output, _repeated_path_codec);
      zone_.WriteTo(ref output, _repeated_zone_codec);
      if (MaxVelocity != 0F) {
        output.WriteRawTag(61);
        output.WriteFloat(MaxVelocity);
      }
      layers_.WriteTo(ref output, _repeated_layers_codec);
      if (GroupAngle != 0F) {
        output.WriteRawTag(77);
        output.WriteFloat(GroupAngle);
      }
      if (LiderTransmitFrequency != 0F) {
        output.WriteRawTag(85);
        output.WriteFloat(LiderTransmitFrequency);
      }
      if (StepZ != 0F) {
        output.WriteRawTag(93);
        output.WriteFloat(StepZ);
      }
      if (ScoutVelocity != 0F) {
        output.WriteRawTag(101);
        output.WriteFloat(ScoutVelocity);
      }
      if (Depth != 0F) {
        output.WriteRawTag(109);
        output.WriteFloat(Depth);
      }
      if (closestKTSPos_ != null) {
        output.WriteRawTag(114);
        output.WriteMessage(ClosestKTSPos);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (TypeOfMission != global::RubinComm.MissionType.Scan) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) TypeOfMission);
      }
      size += aNPAs_.CalculateSize(_map_aNPAs_codec);
      if (DropDurationTime != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(DropDurationTime);
      }
      size += path_.CalculateSize(_repeated_path_codec);
      size += zone_.CalculateSize(_repeated_zone_codec);
      if (MaxVelocity != 0F) {
        size += 1 + 4;
      }
      size += layers_.CalculateSize(_repeated_layers_codec);
      if (GroupAngle != 0F) {
        size += 1 + 4;
      }
      if (LiderTransmitFrequency != 0F) {
        size += 1 + 4;
      }
      if (StepZ != 0F) {
        size += 1 + 4;
      }
      if (ScoutVelocity != 0F) {
        size += 1 + 4;
      }
      if (Depth != 0F) {
        size += 1 + 4;
      }
      if (closestKTSPos_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(ClosestKTSPos);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(MissionGroup other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.TypeOfMission != global::RubinComm.MissionType.Scan) {
        TypeOfMission = other.TypeOfMission;
      }
      aNPAs_.Add(other.aNPAs_);
      if (other.DropDurationTime != 0) {
        DropDurationTime = other.DropDurationTime;
      }
      path_.Add(other.path_);
      zone_.Add(other.zone_);
      if (other.MaxVelocity != 0F) {
        MaxVelocity = other.MaxVelocity;
      }
      layers_.Add(other.layers_);
      if (other.GroupAngle != 0F) {
        GroupAngle = other.GroupAngle;
      }
      if (other.LiderTransmitFrequency != 0F) {
        LiderTransmitFrequency = other.LiderTransmitFrequency;
      }
      if (other.StepZ != 0F) {
        StepZ = other.StepZ;
      }
      if (other.ScoutVelocity != 0F) {
        ScoutVelocity = other.ScoutVelocity;
      }
      if (other.Depth != 0F) {
        Depth = other.Depth;
      }
      if (other.closestKTSPos_ != null) {
        if (closestKTSPos_ == null) {
          ClosestKTSPos = new global::RubinComm.GlobalPos();
        }
        ClosestKTSPos.MergeFrom(other.ClosestKTSPos);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            TypeOfMission = (global::RubinComm.MissionType) input.ReadEnum();
            break;
          }
          case 26: {
            aNPAs_.AddEntriesFrom(input, _map_aNPAs_codec);
            break;
          }
          case 32: {
            DropDurationTime = input.ReadInt32();
            break;
          }
          case 42: {
            path_.AddEntriesFrom(input, _repeated_path_codec);
            break;
          }
          case 50: {
            zone_.AddEntriesFrom(input, _repeated_zone_codec);
            break;
          }
          case 61: {
            MaxVelocity = input.ReadFloat();
            break;
          }
          case 66: {
            layers_.AddEntriesFrom(input, _repeated_layers_codec);
            break;
          }
          case 77: {
            GroupAngle = input.ReadFloat();
            break;
          }
          case 85: {
            LiderTransmitFrequency = input.ReadFloat();
            break;
          }
          case 93: {
            StepZ = input.ReadFloat();
            break;
          }
          case 101: {
            ScoutVelocity = input.ReadFloat();
            break;
          }
          case 109: {
            Depth = input.ReadFloat();
            break;
          }
          case 114: {
            if (closestKTSPos_ == null) {
              ClosestKTSPos = new global::RubinComm.GlobalPos();
            }
            input.ReadMessage(ClosestKTSPos);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            TypeOfMission = (global::RubinComm.MissionType) input.ReadEnum();
            break;
          }
          case 26: {
            aNPAs_.AddEntriesFrom(ref input, _map_aNPAs_codec);
            break;
          }
          case 32: {
            DropDurationTime = input.ReadInt32();
            break;
          }
          case 42: {
            path_.AddEntriesFrom(ref input, _repeated_path_codec);
            break;
          }
          case 50: {
            zone_.AddEntriesFrom(ref input, _repeated_zone_codec);
            break;
          }
          case 61: {
            MaxVelocity = input.ReadFloat();
            break;
          }
          case 66: {
            layers_.AddEntriesFrom(ref input, _repeated_layers_codec);
            break;
          }
          case 77: {
            GroupAngle = input.ReadFloat();
            break;
          }
          case 85: {
            LiderTransmitFrequency = input.ReadFloat();
            break;
          }
          case 93: {
            StepZ = input.ReadFloat();
            break;
          }
          case 101: {
            ScoutVelocity = input.ReadFloat();
            break;
          }
          case 109: {
            Depth = input.ReadFloat();
            break;
          }
          case 114: {
            if (closestKTSPos_ == null) {
              ClosestKTSPos = new global::RubinComm.GlobalPos();
            }
            input.ReadMessage(ClosestKTSPos);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class Mission : pb::IMessage<Mission>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Mission> _parser = new pb::MessageParser<Mission>(() => new Mission());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Mission> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RubinComm.RubinCommReflection.Descriptor.MessageTypes[8]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Mission() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Mission(Mission other) : this() {
      groups_ = other.groups_.Clone();
      kTSPositions_ = other.kTSPositions_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Mission Clone() {
      return new Mission(this);
    }

    /// <summary>Field number for the "Groups" field.</summary>
    public const int GroupsFieldNumber = 1;
    private static readonly pbc::MapField<int, global::RubinComm.MissionGroup>.Codec _map_groups_codec
        = new pbc::MapField<int, global::RubinComm.MissionGroup>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::RubinComm.MissionGroup.Parser), 10);
    private readonly pbc::MapField<int, global::RubinComm.MissionGroup> groups_ = new pbc::MapField<int, global::RubinComm.MissionGroup>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<int, global::RubinComm.MissionGroup> Groups {
      get { return groups_; }
    }

    /// <summary>Field number for the "KTSPositions" field.</summary>
    public const int KTSPositionsFieldNumber = 2;
    private static readonly pb::FieldCodec<global::RubinComm.GlobalPos> _repeated_kTSPositions_codec
        = pb::FieldCodec.ForMessage(18, global::RubinComm.GlobalPos.Parser);
    private readonly pbc::RepeatedField<global::RubinComm.GlobalPos> kTSPositions_ = new pbc::RepeatedField<global::RubinComm.GlobalPos>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RubinComm.GlobalPos> KTSPositions {
      get { return kTSPositions_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Mission);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Mission other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!Groups.Equals(other.Groups)) return false;
      if(!kTSPositions_.Equals(other.kTSPositions_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= Groups.GetHashCode();
      hash ^= kTSPositions_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      groups_.WriteTo(output, _map_groups_codec);
      kTSPositions_.WriteTo(output, _repeated_kTSPositions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      groups_.WriteTo(ref output, _map_groups_codec);
      kTSPositions_.WriteTo(ref output, _repeated_kTSPositions_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += groups_.CalculateSize(_map_groups_codec);
      size += kTSPositions_.CalculateSize(_repeated_kTSPositions_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Mission other) {
      if (other == null) {
        return;
      }
      groups_.Add(other.groups_);
      kTSPositions_.Add(other.kTSPositions_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            groups_.AddEntriesFrom(input, _map_groups_codec);
            break;
          }
          case 18: {
            kTSPositions_.AddEntriesFrom(input, _repeated_kTSPositions_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            groups_.AddEntriesFrom(ref input, _map_groups_codec);
            break;
          }
          case 18: {
            kTSPositions_.AddEntriesFrom(ref input, _repeated_kTSPositions_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Object bounding boxes params 
  /// </summary>
  public sealed partial class ObjectBB : pb::IMessage<ObjectBB>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ObjectBB> _parser = new pb::MessageParser<ObjectBB>(() => new ObjectBB());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ObjectBB> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RubinComm.RubinCommReflection.Descriptor.MessageTypes[9]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ObjectBB() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ObjectBB(ObjectBB other) : this() {
      position_ = other.position_ != null ? other.position_.Clone() : null;
      bBPoses_ = other.bBPoses_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ObjectBB Clone() {
      return new ObjectBB(this);
    }

    /// <summary>Field number for the "Position" field.</summary>
    public const int PositionFieldNumber = 1;
    private global::RubinComm.GlobalPos position_;
    /// <summary>
    /// Position of GO
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RubinComm.GlobalPos Position {
      get { return position_; }
      set {
        position_ = value;
      }
    }

    /// <summary>Field number for the "BBPoses" field.</summary>
    public const int BBPosesFieldNumber = 2;
    private static readonly pb::FieldCodec<global::RubinComm.GlobalPos> _repeated_bBPoses_codec
        = pb::FieldCodec.ForMessage(18, global::RubinComm.GlobalPos.Parser);
    private readonly pbc::RepeatedField<global::RubinComm.GlobalPos> bBPoses_ = new pbc::RepeatedField<global::RubinComm.GlobalPos>();
    /// <summary>
    /// Go's 
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RubinComm.GlobalPos> BBPoses {
      get { return bBPoses_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ObjectBB);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ObjectBB other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(Position, other.Position)) return false;
      if(!bBPoses_.Equals(other.bBPoses_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (position_ != null) hash ^= Position.GetHashCode();
      hash ^= bBPoses_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (position_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Position);
      }
      bBPoses_.WriteTo(output, _repeated_bBPoses_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (position_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(Position);
      }
      bBPoses_.WriteTo(ref output, _repeated_bBPoses_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (position_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(Position);
      }
      size += bBPoses_.CalculateSize(_repeated_bBPoses_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ObjectBB other) {
      if (other == null) {
        return;
      }
      if (other.position_ != null) {
        if (position_ == null) {
          Position = new global::RubinComm.GlobalPos();
        }
        Position.MergeFrom(other.Position);
      }
      bBPoses_.Add(other.bBPoses_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (position_ == null) {
              Position = new global::RubinComm.GlobalPos();
            }
            input.ReadMessage(Position);
            break;
          }
          case 18: {
            bBPoses_.AddEntriesFrom(input, _repeated_bBPoses_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (position_ == null) {
              Position = new global::RubinComm.GlobalPos();
            }
            input.ReadMessage(Position);
            break;
          }
          case 18: {
            bBPoses_.AddEntriesFrom(ref input, _repeated_bBPoses_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SimGameObjects : pb::IMessage<SimGameObjects>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SimGameObjects> _parser = new pb::MessageParser<SimGameObjects>(() => new SimGameObjects());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SimGameObjects> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RubinComm.RubinCommReflection.Descriptor.MessageTypes[10]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SimGameObjects() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SimGameObjects(SimGameObjects other) : this() {
      objectsBB_ = other.objectsBB_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SimGameObjects Clone() {
      return new SimGameObjects(this);
    }

    /// <summary>Field number for the "ObjectsBB" field.</summary>
    public const int ObjectsBBFieldNumber = 1;
    private static readonly pb::FieldCodec<global::RubinComm.ObjectBB> _repeated_objectsBB_codec
        = pb::FieldCodec.ForMessage(10, global::RubinComm.ObjectBB.Parser);
    private readonly pbc::RepeatedField<global::RubinComm.ObjectBB> objectsBB_ = new pbc::RepeatedField<global::RubinComm.ObjectBB>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RubinComm.ObjectBB> ObjectsBB {
      get { return objectsBB_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SimGameObjects);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SimGameObjects other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if(!objectsBB_.Equals(other.objectsBB_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= objectsBB_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      objectsBB_.WriteTo(output, _repeated_objectsBB_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      objectsBB_.WriteTo(ref output, _repeated_objectsBB_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += objectsBB_.CalculateSize(_repeated_objectsBB_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SimGameObjects other) {
      if (other == null) {
        return;
      }
      objectsBB_.Add(other.objectsBB_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            objectsBB_.AddEntriesFrom(input, _repeated_objectsBB_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            objectsBB_.AddEntriesFrom(ref input, _repeated_objectsBB_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class AnpaError : pb::IMessage<AnpaError>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AnpaError> _parser = new pb::MessageParser<AnpaError>(() => new AnpaError());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AnpaError> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RubinComm.RubinCommReflection.Descriptor.MessageTypes[11]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnpaError() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnpaError(AnpaError other) : this() {
      timeStamp_ = other.timeStamp_;
      errorDistance_ = other.errorDistance_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnpaError Clone() {
      return new AnpaError(this);
    }

    /// <summary>Field number for the "TimeStamp" field.</summary>
    public const int TimeStampFieldNumber = 1;
    private string timeStamp_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string TimeStamp {
      get { return timeStamp_; }
      set {
        timeStamp_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    /// <summary>Field number for the "ErrorDistance" field.</summary>
    public const int ErrorDistanceFieldNumber = 2;
    private float errorDistance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float ErrorDistance {
      get { return errorDistance_; }
      set {
        errorDistance_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AnpaError);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AnpaError other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (TimeStamp != other.TimeStamp) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(ErrorDistance, other.ErrorDistance)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (TimeStamp.Length != 0) hash ^= TimeStamp.GetHashCode();
      if (ErrorDistance != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(ErrorDistance);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (TimeStamp.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TimeStamp);
      }
      if (ErrorDistance != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(ErrorDistance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (TimeStamp.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(TimeStamp);
      }
      if (ErrorDistance != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(ErrorDistance);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (TimeStamp.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(TimeStamp);
      }
      if (ErrorDistance != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AnpaError other) {
      if (other == null) {
        return;
      }
      if (other.TimeStamp.Length != 0) {
        TimeStamp = other.TimeStamp;
      }
      if (other.ErrorDistance != 0F) {
        ErrorDistance = other.ErrorDistance;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            TimeStamp = input.ReadString();
            break;
          }
          case 21: {
            ErrorDistance = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            TimeStamp = input.ReadString();
            break;
          }
          case 21: {
            ErrorDistance = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class GroupError : pb::IMessage<GroupError>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<GroupError> _parser = new pb::MessageParser<GroupError>(() => new GroupError());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<GroupError> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RubinComm.RubinCommReflection.Descriptor.MessageTypes[12]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GroupError() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GroupError(GroupError other) : this() {
      anpasError_ = other.anpasError_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public GroupError Clone() {
      return new GroupError(this);
    }

    /// <summary>Field number for the "AnpasError" field.</summary>
    public const int AnpasErrorFieldNumber = 1;
    private static readonly pbc::MapField<int, global::RubinComm.AnpaError>.Codec _map_anpasError_codec
        = new pbc::MapField<int, global::RubinComm.AnpaError>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::RubinComm.AnpaError.Parser), 10);
    private readonly pbc::MapField<int, global::RubinComm.AnpaError> anpasError_ = new pbc::MapField<int, global::RubinComm.AnpaError>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<int, global::RubinComm.AnpaError> AnpasError {
      get { return anpasError_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as GroupError);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(GroupError other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!AnpasError.Equals(other.AnpasError)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= AnpasError.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      anpasError_.WriteTo(output, _map_anpasError_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      anpasError_.WriteTo(ref output, _map_anpasError_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += anpasError_.CalculateSize(_map_anpasError_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(GroupError other) {
      if (other == null) {
        return;
      }
      anpasError_.Add(other.anpasError_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            anpasError_.AddEntriesFrom(input, _map_anpasError_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            anpasError_.AddEntriesFrom(ref input, _map_anpasError_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class DropPoints : pb::IMessage<DropPoints>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<DropPoints> _parser = new pb::MessageParser<DropPoints>(() => new DropPoints());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<DropPoints> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RubinComm.RubinCommReflection.Descriptor.MessageTypes[13]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DropPoints() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DropPoints(DropPoints other) : this() {
      dropPoints_ = other.dropPoints_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public DropPoints Clone() {
      return new DropPoints(this);
    }

    /// <summary>Field number for the "DropPoints" field.</summary>
    public const int DropPoints_FieldNumber = 1;
    private static readonly pbc::MapField<int, global::RubinComm.GlobalPos>.Codec _map_dropPoints_codec
        = new pbc::MapField<int, global::RubinComm.GlobalPos>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::RubinComm.GlobalPos.Parser), 10);
    private readonly pbc::MapField<int, global::RubinComm.GlobalPos> dropPoints_ = new pbc::MapField<int, global::RubinComm.GlobalPos>();
    /// <summary>
    /// key: anpa id, value: drop point position
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<int, global::RubinComm.GlobalPos> DropPoints_ {
      get { return dropPoints_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as DropPoints);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(DropPoints other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!DropPoints_.Equals(other.DropPoints_)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= DropPoints_.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      dropPoints_.WriteTo(output, _map_dropPoints_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      dropPoints_.WriteTo(ref output, _map_dropPoints_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += dropPoints_.CalculateSize(_map_dropPoints_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(DropPoints other) {
      if (other == null) {
        return;
      }
      dropPoints_.Add(other.dropPoints_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            dropPoints_.AddEntriesFrom(input, _map_dropPoints_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            dropPoints_.AddEntriesFrom(ref input, _map_dropPoints_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// TODO: Make controll through 
  /// </summary>
  public sealed partial class AnpaDinamicModel : pb::IMessage<AnpaDinamicModel>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AnpaDinamicModel> _parser = new pb::MessageParser<AnpaDinamicModel>(() => new AnpaDinamicModel());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AnpaDinamicModel> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RubinComm.RubinCommReflection.Descriptor.MessageTypes[14]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnpaDinamicModel() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnpaDinamicModel(AnpaDinamicModel other) : this() {
      isWorking_ = other.isWorking_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnpaDinamicModel Clone() {
      return new AnpaDinamicModel(this);
    }

    /// <summary>Field number for the "IsWorking" field.</summary>
    public const int IsWorkingFieldNumber = 1;
    private static readonly pbc::MapField<int, bool>.Codec _map_isWorking_codec
        = new pbc::MapField<int, bool>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForBool(16, false), 10);
    private readonly pbc::MapField<int, bool> isWorking_ = new pbc::MapField<int, bool>();
    /// <summary>
    /// If false => turn off napa dinamic model and vice versa
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<int, bool> IsWorking {
      get { return isWorking_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AnpaDinamicModel);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AnpaDinamicModel other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!IsWorking.Equals(other.IsWorking)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= IsWorking.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      isWorking_.WriteTo(output, _map_isWorking_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      isWorking_.WriteTo(ref output, _map_isWorking_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += isWorking_.CalculateSize(_map_isWorking_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AnpaDinamicModel other) {
      if (other == null) {
        return;
      }
      isWorking_.Add(other.isWorking_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            isWorking_.AddEntriesFrom(input, _map_isWorking_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            isWorking_.AddEntriesFrom(ref input, _map_isWorking_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ControllValues : pb::IMessage<ControllValues>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ControllValues> _parser = new pb::MessageParser<ControllValues>(() => new ControllValues());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ControllValues> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RubinComm.RubinCommReflection.Descriptor.MessageTypes[15]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ControllValues() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ControllValues(ControllValues other) : this() {
      courseVelocity_ = other.courseVelocity_;
      different_ = other.different_;
      course_ = other.course_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ControllValues Clone() {
      return new ControllValues(this);
    }

    /// <summary>Field number for the "CourseVelocity" field.</summary>
    public const int CourseVelocityFieldNumber = 1;
    private float courseVelocity_;
    /// <summary>
    /// Course velocity (X (Forward in reg - Z coord in unity)) - Курсовая скорость (Скорость по оси Z для юнити)
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float CourseVelocity {
      get { return courseVelocity_; }
      set {
        courseVelocity_ = value;
      }
    }

    /// <summary>Field number for the "Different" field.</summary>
    public const int DifferentFieldNumber = 2;
    private float different_;
    /// <summary>
    /// Different (Тангаж) - Ориентация относительно оси X Unity
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Different {
      get { return different_; }
      set {
        different_ = value;
      }
    }

    /// <summary>Field number for the "Course" field.</summary>
    public const int CourseFieldNumber = 3;
    private float course_;
    /// <summary>
    /// Course (рысканье) - Ориентация относительно оси Y в юнити
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Course {
      get { return course_; }
      set {
        course_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ControllValues);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ControllValues other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(CourseVelocity, other.CourseVelocity)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Different, other.Different)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Course, other.Course)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (CourseVelocity != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(CourseVelocity);
      if (Different != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Different);
      if (Course != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Course);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CourseVelocity != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(CourseVelocity);
      }
      if (Different != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Different);
      }
      if (Course != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Course);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CourseVelocity != 0F) {
        output.WriteRawTag(13);
        output.WriteFloat(CourseVelocity);
      }
      if (Different != 0F) {
        output.WriteRawTag(21);
        output.WriteFloat(Different);
      }
      if (Course != 0F) {
        output.WriteRawTag(29);
        output.WriteFloat(Course);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (CourseVelocity != 0F) {
        size += 1 + 4;
      }
      if (Different != 0F) {
        size += 1 + 4;
      }
      if (Course != 0F) {
        size += 1 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ControllValues other) {
      if (other == null) {
        return;
      }
      if (other.CourseVelocity != 0F) {
        CourseVelocity = other.CourseVelocity;
      }
      if (other.Different != 0F) {
        Different = other.Different;
      }
      if (other.Course != 0F) {
        Course = other.Course;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 13: {
            CourseVelocity = input.ReadFloat();
            break;
          }
          case 21: {
            Different = input.ReadFloat();
            break;
          }
          case 29: {
            Course = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 13: {
            CourseVelocity = input.ReadFloat();
            break;
          }
          case 21: {
            Different = input.ReadFloat();
            break;
          }
          case 29: {
            Course = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class RegulatorComplex : pb::IMessage<RegulatorComplex>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<RegulatorComplex> _parser = new pb::MessageParser<RegulatorComplex>(() => new RegulatorComplex());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<RegulatorComplex> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RubinComm.RubinCommReflection.Descriptor.MessageTypes[16]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegulatorComplex() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegulatorComplex(RegulatorComplex other) : this() {
      aNPAControll_ = other.aNPAControll_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public RegulatorComplex Clone() {
      return new RegulatorComplex(this);
    }

    /// <summary>Field number for the "ANPAControll" field.</summary>
    public const int ANPAControllFieldNumber = 1;
    private static readonly pbc::MapField<int, global::RubinComm.ControllValues>.Codec _map_aNPAControll_codec
        = new pbc::MapField<int, global::RubinComm.ControllValues>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::RubinComm.ControllValues.Parser), 10);
    private readonly pbc::MapField<int, global::RubinComm.ControllValues> aNPAControll_ = new pbc::MapField<int, global::RubinComm.ControllValues>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<int, global::RubinComm.ControllValues> ANPAControll {
      get { return aNPAControll_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as RegulatorComplex);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(RegulatorComplex other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!ANPAControll.Equals(other.ANPAControll)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      hash ^= ANPAControll.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      aNPAControll_.WriteTo(output, _map_aNPAControll_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      aNPAControll_.WriteTo(ref output, _map_aNPAControll_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      size += aNPAControll_.CalculateSize(_map_aNPAControll_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(RegulatorComplex other) {
      if (other == null) {
        return;
      }
      aNPAControll_.Add(other.aNPAControll_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            aNPAControll_.AddEntriesFrom(input, _map_aNPAControll_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            aNPAControll_.AddEntriesFrom(ref input, _map_aNPAControll_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Data for simulator initialisation
  /// </summary>
  public sealed partial class SimInit : pb::IMessage<SimInit>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SimInit> _parser = new pb::MessageParser<SimInit>(() => new SimInit());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SimInit> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RubinComm.RubinCommReflection.Descriptor.MessageTypes[17]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SimInit() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SimInit(SimInit other) : this() {
      simZoneCenter_ = other.simZoneCenter_ != null ? other.simZoneCenter_.Clone() : null;
      time_ = other.time_;
      beaufort_ = other.beaufort_;
      ktsSpawnPoses_ = other.ktsSpawnPoses_.Clone();
      buoys_ = other.buoys_.Clone();
      precipation_ = other.precipation_;
      aNPAAmount_ = other.aNPAAmount_;
      waterDensity_ = other.waterDensity_;
      temperature_ = other.temperature_;
      pSU_ = other.pSU_;
      turbidity_ = other.turbidity_;
      echoAngle_ = other.echoAngle_;
      echoDistance_ = other.echoDistance_;
      error_ = other.error_;
      density_ = other.density_;
      frequency_ = other.frequency_;
      navDistortion_ = other.navDistortion_;
      kTSDepth_ = other.kTSDepth_;
      seaBottomDepth_ = other.seaBottomDepth_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SimInit Clone() {
      return new SimInit(this);
    }

    /// <summary>Field number for the "SimZoneCenter" field.</summary>
    public const int SimZoneCenterFieldNumber = 1;
    private global::RubinComm.GlobalPos simZoneCenter_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RubinComm.GlobalPos SimZoneCenter {
      get { return simZoneCenter_; }
      set {
        simZoneCenter_ = value;
      }
    }

    /// <summary>Field number for the "Time" field.</summary>
    public const int TimeFieldNumber = 2;
    private int time_;
    /// <summary>
    /// Time of the day in sim
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Time {
      get { return time_; }
      set {
        time_ = value;
      }
    }

    /// <summary>Field number for the "Beaufort" field.</summary>
    public const int BeaufortFieldNumber = 3;
    private int beaufort_;
    /// <summary>
    /// Sea state as a Beaufort value
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Beaufort {
      get { return beaufort_; }
      set {
        beaufort_ = value;
      }
    }

    /// <summary>Field number for the "ktsSpawnPoses" field.</summary>
    public const int KtsSpawnPosesFieldNumber = 4;
    private static readonly pb::FieldCodec<global::RubinComm.GlobalPos> _repeated_ktsSpawnPoses_codec
        = pb::FieldCodec.ForMessage(34, global::RubinComm.GlobalPos.Parser);
    private readonly pbc::RepeatedField<global::RubinComm.GlobalPos> ktsSpawnPoses_ = new pbc::RepeatedField<global::RubinComm.GlobalPos>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RubinComm.GlobalPos> KtsSpawnPoses {
      get { return ktsSpawnPoses_; }
    }

    /// <summary>Field number for the "Buoys" field.</summary>
    public const int BuoysFieldNumber = 6;
    private static readonly pb::FieldCodec<global::RubinComm.GlobalPos> _repeated_buoys_codec
        = pb::FieldCodec.ForMessage(50, global::RubinComm.GlobalPos.Parser);
    private readonly pbc::RepeatedField<global::RubinComm.GlobalPos> buoys_ = new pbc::RepeatedField<global::RubinComm.GlobalPos>();
    /// <summary>
    /// List of bouys with their's geo position
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RubinComm.GlobalPos> Buoys {
      get { return buoys_; }
    }

    /// <summary>Field number for the "Precipation" field.</summary>
    public const int PrecipationFieldNumber = 7;
    private global::RubinComm.Precipations precipation_ = global::RubinComm.Precipations.Rain;
    /// <summary>
    /// Type of Precipation
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RubinComm.Precipations Precipation {
      get { return precipation_; }
      set {
        precipation_ = value;
      }
    }

    /// <summary>Field number for the "ANPAAmount" field.</summary>
    public const int ANPAAmountFieldNumber = 8;
    private int aNPAAmount_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ANPAAmount {
      get { return aNPAAmount_; }
      set {
        aNPAAmount_ = value;
      }
    }

    /// <summary>Field number for the "WaterDensity" field.</summary>
    public const int WaterDensityFieldNumber = 9;
    private float waterDensity_;
    /// <summary>
    /// Values just for calculation. They won't be displayed anywhere
    /// </summary>
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float WaterDensity {
      get { return waterDensity_; }
      set {
        waterDensity_ = value;
      }
    }

    /// <summary>Field number for the "Temperature" field.</summary>
    public const int TemperatureFieldNumber = 10;
    private int temperature_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Temperature {
      get { return temperature_; }
      set {
        temperature_ = value;
      }
    }

    /// <summary>Field number for the "PSU" field.</summary>
    public const int PSUFieldNumber = 11;
    private int pSU_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int PSU {
      get { return pSU_; }
      set {
        pSU_ = value;
      }
    }

    /// <summary>Field number for the "Turbidity" field.</summary>
    public const int TurbidityFieldNumber = 12;
    private float turbidity_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Turbidity {
      get { return turbidity_; }
      set {
        turbidity_ = value;
      }
    }

    /// <summary>Field number for the "EchoAngle" field.</summary>
    public const int EchoAngleFieldNumber = 13;
    private float echoAngle_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float EchoAngle {
      get { return echoAngle_; }
      set {
        echoAngle_ = value;
      }
    }

    /// <summary>Field number for the "EchoDistance" field.</summary>
    public const int EchoDistanceFieldNumber = 14;
    private float echoDistance_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float EchoDistance {
      get { return echoDistance_; }
      set {
        echoDistance_ = value;
      }
    }

    /// <summary>Field number for the "Error" field.</summary>
    public const int ErrorFieldNumber = 15;
    private float error_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Error {
      get { return error_; }
      set {
        error_ = value;
      }
    }

    /// <summary>Field number for the "Density" field.</summary>
    public const int DensityFieldNumber = 16;
    private float density_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Density {
      get { return density_; }
      set {
        density_ = value;
      }
    }

    /// <summary>Field number for the "Frequency" field.</summary>
    public const int FrequencyFieldNumber = 17;
    private float frequency_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float Frequency {
      get { return frequency_; }
      set {
        frequency_ = value;
      }
    }

    /// <summary>Field number for the "NavDistortion" field.</summary>
    public const int NavDistortionFieldNumber = 18;
    private float navDistortion_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float NavDistortion {
      get { return navDistortion_; }
      set {
        navDistortion_ = value;
      }
    }

    /// <summary>Field number for the "KTSDepth" field.</summary>
    public const int KTSDepthFieldNumber = 19;
    private float kTSDepth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float KTSDepth {
      get { return kTSDepth_; }
      set {
        kTSDepth_ = value;
      }
    }

    /// <summary>Field number for the "SeaBottomDepth" field.</summary>
    public const int SeaBottomDepthFieldNumber = 20;
    private float seaBottomDepth_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public float SeaBottomDepth {
      get { return seaBottomDepth_; }
      set {
        seaBottomDepth_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SimInit);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SimInit other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (!object.Equals(SimZoneCenter, other.SimZoneCenter)) return false;
      if (Time != other.Time) return false;
      if (Beaufort != other.Beaufort) return false;
      if(!ktsSpawnPoses_.Equals(other.ktsSpawnPoses_)) return false;
      if(!buoys_.Equals(other.buoys_)) return false;
      if (Precipation != other.Precipation) return false;
      if (ANPAAmount != other.ANPAAmount) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(WaterDensity, other.WaterDensity)) return false;
      if (Temperature != other.Temperature) return false;
      if (PSU != other.PSU) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Turbidity, other.Turbidity)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(EchoAngle, other.EchoAngle)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(EchoDistance, other.EchoDistance)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Error, other.Error)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Density, other.Density)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(Frequency, other.Frequency)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(NavDistortion, other.NavDistortion)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(KTSDepth, other.KTSDepth)) return false;
      if (!pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.Equals(SeaBottomDepth, other.SeaBottomDepth)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (simZoneCenter_ != null) hash ^= SimZoneCenter.GetHashCode();
      if (Time != 0) hash ^= Time.GetHashCode();
      if (Beaufort != 0) hash ^= Beaufort.GetHashCode();
      hash ^= ktsSpawnPoses_.GetHashCode();
      hash ^= buoys_.GetHashCode();
      if (Precipation != global::RubinComm.Precipations.Rain) hash ^= Precipation.GetHashCode();
      if (ANPAAmount != 0) hash ^= ANPAAmount.GetHashCode();
      if (WaterDensity != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(WaterDensity);
      if (Temperature != 0) hash ^= Temperature.GetHashCode();
      if (PSU != 0) hash ^= PSU.GetHashCode();
      if (Turbidity != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Turbidity);
      if (EchoAngle != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(EchoAngle);
      if (EchoDistance != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(EchoDistance);
      if (Error != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Error);
      if (Density != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Density);
      if (Frequency != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(Frequency);
      if (NavDistortion != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(NavDistortion);
      if (KTSDepth != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(KTSDepth);
      if (SeaBottomDepth != 0F) hash ^= pbc::ProtobufEqualityComparers.BitwiseSingleEqualityComparer.GetHashCode(SeaBottomDepth);
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (simZoneCenter_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SimZoneCenter);
      }
      if (Time != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Time);
      }
      if (Beaufort != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Beaufort);
      }
      ktsSpawnPoses_.WriteTo(output, _repeated_ktsSpawnPoses_codec);
      buoys_.WriteTo(output, _repeated_buoys_codec);
      if (Precipation != global::RubinComm.Precipations.Rain) {
        output.WriteRawTag(56);
        output.WriteEnum((int) Precipation);
      }
      if (ANPAAmount != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(ANPAAmount);
      }
      if (WaterDensity != 0F) {
        output.WriteRawTag(77);
        output.WriteFloat(WaterDensity);
      }
      if (Temperature != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Temperature);
      }
      if (PSU != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(PSU);
      }
      if (Turbidity != 0F) {
        output.WriteRawTag(101);
        output.WriteFloat(Turbidity);
      }
      if (EchoAngle != 0F) {
        output.WriteRawTag(109);
        output.WriteFloat(EchoAngle);
      }
      if (EchoDistance != 0F) {
        output.WriteRawTag(117);
        output.WriteFloat(EchoDistance);
      }
      if (Error != 0F) {
        output.WriteRawTag(125);
        output.WriteFloat(Error);
      }
      if (Density != 0F) {
        output.WriteRawTag(133, 1);
        output.WriteFloat(Density);
      }
      if (Frequency != 0F) {
        output.WriteRawTag(141, 1);
        output.WriteFloat(Frequency);
      }
      if (NavDistortion != 0F) {
        output.WriteRawTag(149, 1);
        output.WriteFloat(NavDistortion);
      }
      if (KTSDepth != 0F) {
        output.WriteRawTag(157, 1);
        output.WriteFloat(KTSDepth);
      }
      if (SeaBottomDepth != 0F) {
        output.WriteRawTag(165, 1);
        output.WriteFloat(SeaBottomDepth);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (simZoneCenter_ != null) {
        output.WriteRawTag(10);
        output.WriteMessage(SimZoneCenter);
      }
      if (Time != 0) {
        output.WriteRawTag(16);
        output.WriteInt32(Time);
      }
      if (Beaufort != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(Beaufort);
      }
      ktsSpawnPoses_.WriteTo(ref output, _repeated_ktsSpawnPoses_codec);
      buoys_.WriteTo(ref output, _repeated_buoys_codec);
      if (Precipation != global::RubinComm.Precipations.Rain) {
        output.WriteRawTag(56);
        output.WriteEnum((int) Precipation);
      }
      if (ANPAAmount != 0) {
        output.WriteRawTag(64);
        output.WriteInt32(ANPAAmount);
      }
      if (WaterDensity != 0F) {
        output.WriteRawTag(77);
        output.WriteFloat(WaterDensity);
      }
      if (Temperature != 0) {
        output.WriteRawTag(80);
        output.WriteInt32(Temperature);
      }
      if (PSU != 0) {
        output.WriteRawTag(88);
        output.WriteInt32(PSU);
      }
      if (Turbidity != 0F) {
        output.WriteRawTag(101);
        output.WriteFloat(Turbidity);
      }
      if (EchoAngle != 0F) {
        output.WriteRawTag(109);
        output.WriteFloat(EchoAngle);
      }
      if (EchoDistance != 0F) {
        output.WriteRawTag(117);
        output.WriteFloat(EchoDistance);
      }
      if (Error != 0F) {
        output.WriteRawTag(125);
        output.WriteFloat(Error);
      }
      if (Density != 0F) {
        output.WriteRawTag(133, 1);
        output.WriteFloat(Density);
      }
      if (Frequency != 0F) {
        output.WriteRawTag(141, 1);
        output.WriteFloat(Frequency);
      }
      if (NavDistortion != 0F) {
        output.WriteRawTag(149, 1);
        output.WriteFloat(NavDistortion);
      }
      if (KTSDepth != 0F) {
        output.WriteRawTag(157, 1);
        output.WriteFloat(KTSDepth);
      }
      if (SeaBottomDepth != 0F) {
        output.WriteRawTag(165, 1);
        output.WriteFloat(SeaBottomDepth);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (simZoneCenter_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(SimZoneCenter);
      }
      if (Time != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Time);
      }
      if (Beaufort != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Beaufort);
      }
      size += ktsSpawnPoses_.CalculateSize(_repeated_ktsSpawnPoses_codec);
      size += buoys_.CalculateSize(_repeated_buoys_codec);
      if (Precipation != global::RubinComm.Precipations.Rain) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) Precipation);
      }
      if (ANPAAmount != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ANPAAmount);
      }
      if (WaterDensity != 0F) {
        size += 1 + 4;
      }
      if (Temperature != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Temperature);
      }
      if (PSU != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(PSU);
      }
      if (Turbidity != 0F) {
        size += 1 + 4;
      }
      if (EchoAngle != 0F) {
        size += 1 + 4;
      }
      if (EchoDistance != 0F) {
        size += 1 + 4;
      }
      if (Error != 0F) {
        size += 1 + 4;
      }
      if (Density != 0F) {
        size += 2 + 4;
      }
      if (Frequency != 0F) {
        size += 2 + 4;
      }
      if (NavDistortion != 0F) {
        size += 2 + 4;
      }
      if (KTSDepth != 0F) {
        size += 2 + 4;
      }
      if (SeaBottomDepth != 0F) {
        size += 2 + 4;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SimInit other) {
      if (other == null) {
        return;
      }
      if (other.simZoneCenter_ != null) {
        if (simZoneCenter_ == null) {
          SimZoneCenter = new global::RubinComm.GlobalPos();
        }
        SimZoneCenter.MergeFrom(other.SimZoneCenter);
      }
      if (other.Time != 0) {
        Time = other.Time;
      }
      if (other.Beaufort != 0) {
        Beaufort = other.Beaufort;
      }
      ktsSpawnPoses_.Add(other.ktsSpawnPoses_);
      buoys_.Add(other.buoys_);
      if (other.Precipation != global::RubinComm.Precipations.Rain) {
        Precipation = other.Precipation;
      }
      if (other.ANPAAmount != 0) {
        ANPAAmount = other.ANPAAmount;
      }
      if (other.WaterDensity != 0F) {
        WaterDensity = other.WaterDensity;
      }
      if (other.Temperature != 0) {
        Temperature = other.Temperature;
      }
      if (other.PSU != 0) {
        PSU = other.PSU;
      }
      if (other.Turbidity != 0F) {
        Turbidity = other.Turbidity;
      }
      if (other.EchoAngle != 0F) {
        EchoAngle = other.EchoAngle;
      }
      if (other.EchoDistance != 0F) {
        EchoDistance = other.EchoDistance;
      }
      if (other.Error != 0F) {
        Error = other.Error;
      }
      if (other.Density != 0F) {
        Density = other.Density;
      }
      if (other.Frequency != 0F) {
        Frequency = other.Frequency;
      }
      if (other.NavDistortion != 0F) {
        NavDistortion = other.NavDistortion;
      }
      if (other.KTSDepth != 0F) {
        KTSDepth = other.KTSDepth;
      }
      if (other.SeaBottomDepth != 0F) {
        SeaBottomDepth = other.SeaBottomDepth;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            if (simZoneCenter_ == null) {
              SimZoneCenter = new global::RubinComm.GlobalPos();
            }
            input.ReadMessage(SimZoneCenter);
            break;
          }
          case 16: {
            Time = input.ReadInt32();
            break;
          }
          case 24: {
            Beaufort = input.ReadInt32();
            break;
          }
          case 34: {
            ktsSpawnPoses_.AddEntriesFrom(input, _repeated_ktsSpawnPoses_codec);
            break;
          }
          case 50: {
            buoys_.AddEntriesFrom(input, _repeated_buoys_codec);
            break;
          }
          case 56: {
            Precipation = (global::RubinComm.Precipations) input.ReadEnum();
            break;
          }
          case 64: {
            ANPAAmount = input.ReadInt32();
            break;
          }
          case 77: {
            WaterDensity = input.ReadFloat();
            break;
          }
          case 80: {
            Temperature = input.ReadInt32();
            break;
          }
          case 88: {
            PSU = input.ReadInt32();
            break;
          }
          case 101: {
            Turbidity = input.ReadFloat();
            break;
          }
          case 109: {
            EchoAngle = input.ReadFloat();
            break;
          }
          case 117: {
            EchoDistance = input.ReadFloat();
            break;
          }
          case 125: {
            Error = input.ReadFloat();
            break;
          }
          case 133: {
            Density = input.ReadFloat();
            break;
          }
          case 141: {
            Frequency = input.ReadFloat();
            break;
          }
          case 149: {
            NavDistortion = input.ReadFloat();
            break;
          }
          case 157: {
            KTSDepth = input.ReadFloat();
            break;
          }
          case 165: {
            SeaBottomDepth = input.ReadFloat();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            if (simZoneCenter_ == null) {
              SimZoneCenter = new global::RubinComm.GlobalPos();
            }
            input.ReadMessage(SimZoneCenter);
            break;
          }
          case 16: {
            Time = input.ReadInt32();
            break;
          }
          case 24: {
            Beaufort = input.ReadInt32();
            break;
          }
          case 34: {
            ktsSpawnPoses_.AddEntriesFrom(ref input, _repeated_ktsSpawnPoses_codec);
            break;
          }
          case 50: {
            buoys_.AddEntriesFrom(ref input, _repeated_buoys_codec);
            break;
          }
          case 56: {
            Precipation = (global::RubinComm.Precipations) input.ReadEnum();
            break;
          }
          case 64: {
            ANPAAmount = input.ReadInt32();
            break;
          }
          case 77: {
            WaterDensity = input.ReadFloat();
            break;
          }
          case 80: {
            Temperature = input.ReadInt32();
            break;
          }
          case 88: {
            PSU = input.ReadInt32();
            break;
          }
          case 101: {
            Turbidity = input.ReadFloat();
            break;
          }
          case 109: {
            EchoAngle = input.ReadFloat();
            break;
          }
          case 117: {
            EchoDistance = input.ReadFloat();
            break;
          }
          case 125: {
            Error = input.ReadFloat();
            break;
          }
          case 133: {
            Density = input.ReadFloat();
            break;
          }
          case 141: {
            Frequency = input.ReadFloat();
            break;
          }
          case 149: {
            NavDistortion = input.ReadFloat();
            break;
          }
          case 157: {
            KTSDepth = input.ReadFloat();
            break;
          }
          case 165: {
            SeaBottomDepth = input.ReadFloat();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Message to send some string value or JSON
  /// </summary>
  public sealed partial class Custom : pb::IMessage<Custom>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<Custom> _parser = new pb::MessageParser<Custom>(() => new Custom());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<Custom> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RubinComm.RubinCommReflection.Descriptor.MessageTypes[18]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Custom() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Custom(Custom other) : this() {
      message_ = other.message_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public Custom Clone() {
      return new Custom(this);
    }

    /// <summary>Field number for the "Message" field.</summary>
    public const int MessageFieldNumber = 1;
    private string message_ = "";
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public string Message {
      get { return message_; }
      set {
        message_ = pb::ProtoPreconditions.CheckNotNull(value, "value");
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as Custom);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(Custom other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Message != other.Message) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Message.Length != 0) hash ^= Message.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Message.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Message.Length != 0) {
        output.WriteRawTag(10);
        output.WriteString(Message);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Message.Length != 0) {
        size += 1 + pb::CodedOutputStream.ComputeStringSize(Message);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(Custom other) {
      if (other == null) {
        return;
      }
      if (other.Message.Length != 0) {
        Message = other.Message;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 10: {
            Message = input.ReadString();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 10: {
            Message = input.ReadString();
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Sim => SGRU. PORT: 8085. TOPIC: IsInKTS
  /// </summary>
  public sealed partial class AnpaInKTS : pb::IMessage<AnpaInKTS>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<AnpaInKTS> _parser = new pb::MessageParser<AnpaInKTS>(() => new AnpaInKTS());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<AnpaInKTS> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RubinComm.RubinCommReflection.Descriptor.MessageTypes[19]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnpaInKTS() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnpaInKTS(AnpaInKTS other) : this() {
      aNPAId_ = other.aNPAId_;
      kTSId_ = other.kTSId_;
      holeId_ = other.holeId_;
      inKts_ = other.inKts_;
      kTSPosition_ = other.kTSPosition_ != null ? other.kTSPosition_.Clone() : null;
      kTSOrientation_ = other.kTSOrientation_ != null ? other.kTSOrientation_.Clone() : null;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public AnpaInKTS Clone() {
      return new AnpaInKTS(this);
    }

    /// <summary>Field number for the "ANPAId" field.</summary>
    public const int ANPAIdFieldNumber = 1;
    private uint aNPAId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint ANPAId {
      get { return aNPAId_; }
      set {
        aNPAId_ = value;
      }
    }

    /// <summary>Field number for the "KTSId" field.</summary>
    public const int KTSIdFieldNumber = 2;
    private uint kTSId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint KTSId {
      get { return kTSId_; }
      set {
        kTSId_ = value;
      }
    }

    /// <summary>Field number for the "HoleId" field.</summary>
    public const int HoleIdFieldNumber = 3;
    private uint holeId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public uint HoleId {
      get { return holeId_; }
      set {
        holeId_ = value;
      }
    }

    /// <summary>Field number for the "InKts" field.</summary>
    public const int InKtsFieldNumber = 4;
    private bool inKts_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool InKts {
      get { return inKts_; }
      set {
        inKts_ = value;
      }
    }

    /// <summary>Field number for the "KTSPosition" field.</summary>
    public const int KTSPositionFieldNumber = 5;
    private global::RubinComm.GlobalPos kTSPosition_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RubinComm.GlobalPos KTSPosition {
      get { return kTSPosition_; }
      set {
        kTSPosition_ = value;
      }
    }

    /// <summary>Field number for the "KTSOrientation" field.</summary>
    public const int KTSOrientationFieldNumber = 6;
    private global::RubinComm.Orientation kTSOrientation_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RubinComm.Orientation KTSOrientation {
      get { return kTSOrientation_; }
      set {
        kTSOrientation_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as AnpaInKTS);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(AnpaInKTS other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (ANPAId != other.ANPAId) return false;
      if (KTSId != other.KTSId) return false;
      if (HoleId != other.HoleId) return false;
      if (InKts != other.InKts) return false;
      if (!object.Equals(KTSPosition, other.KTSPosition)) return false;
      if (!object.Equals(KTSOrientation, other.KTSOrientation)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (ANPAId != 0) hash ^= ANPAId.GetHashCode();
      if (KTSId != 0) hash ^= KTSId.GetHashCode();
      if (HoleId != 0) hash ^= HoleId.GetHashCode();
      if (InKts != false) hash ^= InKts.GetHashCode();
      if (kTSPosition_ != null) hash ^= KTSPosition.GetHashCode();
      if (kTSOrientation_ != null) hash ^= KTSOrientation.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (ANPAId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ANPAId);
      }
      if (KTSId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(KTSId);
      }
      if (HoleId != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(HoleId);
      }
      if (InKts != false) {
        output.WriteRawTag(32);
        output.WriteBool(InKts);
      }
      if (kTSPosition_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(KTSPosition);
      }
      if (kTSOrientation_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(KTSOrientation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (ANPAId != 0) {
        output.WriteRawTag(8);
        output.WriteUInt32(ANPAId);
      }
      if (KTSId != 0) {
        output.WriteRawTag(16);
        output.WriteUInt32(KTSId);
      }
      if (HoleId != 0) {
        output.WriteRawTag(24);
        output.WriteUInt32(HoleId);
      }
      if (InKts != false) {
        output.WriteRawTag(32);
        output.WriteBool(InKts);
      }
      if (kTSPosition_ != null) {
        output.WriteRawTag(42);
        output.WriteMessage(KTSPosition);
      }
      if (kTSOrientation_ != null) {
        output.WriteRawTag(50);
        output.WriteMessage(KTSOrientation);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (ANPAId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(ANPAId);
      }
      if (KTSId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(KTSId);
      }
      if (HoleId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeUInt32Size(HoleId);
      }
      if (InKts != false) {
        size += 1 + 1;
      }
      if (kTSPosition_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(KTSPosition);
      }
      if (kTSOrientation_ != null) {
        size += 1 + pb::CodedOutputStream.ComputeMessageSize(KTSOrientation);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(AnpaInKTS other) {
      if (other == null) {
        return;
      }
      if (other.ANPAId != 0) {
        ANPAId = other.ANPAId;
      }
      if (other.KTSId != 0) {
        KTSId = other.KTSId;
      }
      if (other.HoleId != 0) {
        HoleId = other.HoleId;
      }
      if (other.InKts != false) {
        InKts = other.InKts;
      }
      if (other.kTSPosition_ != null) {
        if (kTSPosition_ == null) {
          KTSPosition = new global::RubinComm.GlobalPos();
        }
        KTSPosition.MergeFrom(other.KTSPosition);
      }
      if (other.kTSOrientation_ != null) {
        if (kTSOrientation_ == null) {
          KTSOrientation = new global::RubinComm.Orientation();
        }
        KTSOrientation.MergeFrom(other.KTSOrientation);
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            ANPAId = input.ReadUInt32();
            break;
          }
          case 16: {
            KTSId = input.ReadUInt32();
            break;
          }
          case 24: {
            HoleId = input.ReadUInt32();
            break;
          }
          case 32: {
            InKts = input.ReadBool();
            break;
          }
          case 42: {
            if (kTSPosition_ == null) {
              KTSPosition = new global::RubinComm.GlobalPos();
            }
            input.ReadMessage(KTSPosition);
            break;
          }
          case 50: {
            if (kTSOrientation_ == null) {
              KTSOrientation = new global::RubinComm.Orientation();
            }
            input.ReadMessage(KTSOrientation);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            ANPAId = input.ReadUInt32();
            break;
          }
          case 16: {
            KTSId = input.ReadUInt32();
            break;
          }
          case 24: {
            HoleId = input.ReadUInt32();
            break;
          }
          case 32: {
            InKts = input.ReadBool();
            break;
          }
          case 42: {
            if (kTSPosition_ == null) {
              KTSPosition = new global::RubinComm.GlobalPos();
            }
            input.ReadMessage(KTSPosition);
            break;
          }
          case 50: {
            if (kTSOrientation_ == null) {
              KTSOrientation = new global::RubinComm.Orientation();
            }
            input.ReadMessage(KTSOrientation);
            break;
          }
        }
      }
    }
    #endif

  }

  /// <summary>
  /// Message for ANPA diagnostic
  /// Suggest use very low frequency for that msg
  /// Freq &lt;= 0.1Hz
  /// Fill status msg for true: 1 and false: -1
  /// </summary>
  public sealed partial class ANPAAlive : pb::IMessage<ANPAAlive>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ANPAAlive> _parser = new pb::MessageParser<ANPAAlive>(() => new ANPAAlive());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ANPAAlive> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RubinComm.RubinCommReflection.Descriptor.MessageTypes[20]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ANPAAlive() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ANPAAlive(ANPAAlive other) : this() {
      id_ = other.id_;
      connection_ = other.connection_;
      iNS_ = other.iNS_;
      lag_ = other.lag_;
      compass_ = other.compass_;
      pressureSensor_ = other.pressureSensor_;
      echolotFront_ = other.echolotFront_;
      echolotBottom_ = other.echolotBottom_;
      cV_ = other.cV_;
      seismicTomography_ = other.seismicTomography_;
      floatingDiffSensor_ = other.floatingDiffSensor_;
      actuatorModule_ = other.actuatorModule_;
      batteryControllSystem_ = other.batteryControllSystem_;
      batteryPercentage_ = other.batteryPercentage_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ANPAAlive Clone() {
      return new ANPAAlive(this);
    }

    /// <summary>Field number for the "Id" field.</summary>
    public const int IdFieldNumber = 1;
    private int id_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int Id {
      get { return id_; }
      set {
        id_ = value;
      }
    }

    /// <summary>Field number for the "Connection" field.</summary>
    public const int ConnectionFieldNumber = 2;
    private bool connection_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Connection {
      get { return connection_; }
      set {
        connection_ = value;
      }
    }

    /// <summary>Field number for the "INS" field.</summary>
    public const int INSFieldNumber = 3;
    private bool iNS_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool INS {
      get { return iNS_; }
      set {
        iNS_ = value;
      }
    }

    /// <summary>Field number for the "Lag" field.</summary>
    public const int LagFieldNumber = 4;
    private bool lag_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Lag {
      get { return lag_; }
      set {
        lag_ = value;
      }
    }

    /// <summary>Field number for the "Compass" field.</summary>
    public const int CompassFieldNumber = 5;
    private bool compass_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Compass {
      get { return compass_; }
      set {
        compass_ = value;
      }
    }

    /// <summary>Field number for the "PressureSensor" field.</summary>
    public const int PressureSensorFieldNumber = 6;
    private bool pressureSensor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool PressureSensor {
      get { return pressureSensor_; }
      set {
        pressureSensor_ = value;
      }
    }

    /// <summary>Field number for the "EcholotFront" field.</summary>
    public const int EcholotFrontFieldNumber = 7;
    private bool echolotFront_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool EcholotFront {
      get { return echolotFront_; }
      set {
        echolotFront_ = value;
      }
    }

    /// <summary>Field number for the "EcholotBottom" field.</summary>
    public const int EcholotBottomFieldNumber = 8;
    private bool echolotBottom_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool EcholotBottom {
      get { return echolotBottom_; }
      set {
        echolotBottom_ = value;
      }
    }

    /// <summary>Field number for the "CV" field.</summary>
    public const int CVFieldNumber = 9;
    private bool cV_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool CV {
      get { return cV_; }
      set {
        cV_ = value;
      }
    }

    /// <summary>Field number for the "SeismicTomography" field.</summary>
    public const int SeismicTomographyFieldNumber = 10;
    private bool seismicTomography_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool SeismicTomography {
      get { return seismicTomography_; }
      set {
        seismicTomography_ = value;
      }
    }

    /// <summary>Field number for the "FloatingDiffSensor" field.</summary>
    public const int FloatingDiffSensorFieldNumber = 11;
    private bool floatingDiffSensor_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool FloatingDiffSensor {
      get { return floatingDiffSensor_; }
      set {
        floatingDiffSensor_ = value;
      }
    }

    /// <summary>Field number for the "ActuatorModule" field.</summary>
    public const int ActuatorModuleFieldNumber = 12;
    private bool actuatorModule_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool ActuatorModule {
      get { return actuatorModule_; }
      set {
        actuatorModule_ = value;
      }
    }

    /// <summary>Field number for the "BatteryControllSystem" field.</summary>
    public const int BatteryControllSystemFieldNumber = 13;
    private bool batteryControllSystem_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool BatteryControllSystem {
      get { return batteryControllSystem_; }
      set {
        batteryControllSystem_ = value;
      }
    }

    /// <summary>Field number for the "BatteryPercentage" field.</summary>
    public const int BatteryPercentageFieldNumber = 14;
    private int batteryPercentage_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int BatteryPercentage {
      get { return batteryPercentage_; }
      set {
        batteryPercentage_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ANPAAlive);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ANPAAlive other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (Id != other.Id) return false;
      if (Connection != other.Connection) return false;
      if (INS != other.INS) return false;
      if (Lag != other.Lag) return false;
      if (Compass != other.Compass) return false;
      if (PressureSensor != other.PressureSensor) return false;
      if (EcholotFront != other.EcholotFront) return false;
      if (EcholotBottom != other.EcholotBottom) return false;
      if (CV != other.CV) return false;
      if (SeismicTomography != other.SeismicTomography) return false;
      if (FloatingDiffSensor != other.FloatingDiffSensor) return false;
      if (ActuatorModule != other.ActuatorModule) return false;
      if (BatteryControllSystem != other.BatteryControllSystem) return false;
      if (BatteryPercentage != other.BatteryPercentage) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (Id != 0) hash ^= Id.GetHashCode();
      if (Connection != false) hash ^= Connection.GetHashCode();
      if (INS != false) hash ^= INS.GetHashCode();
      if (Lag != false) hash ^= Lag.GetHashCode();
      if (Compass != false) hash ^= Compass.GetHashCode();
      if (PressureSensor != false) hash ^= PressureSensor.GetHashCode();
      if (EcholotFront != false) hash ^= EcholotFront.GetHashCode();
      if (EcholotBottom != false) hash ^= EcholotBottom.GetHashCode();
      if (CV != false) hash ^= CV.GetHashCode();
      if (SeismicTomography != false) hash ^= SeismicTomography.GetHashCode();
      if (FloatingDiffSensor != false) hash ^= FloatingDiffSensor.GetHashCode();
      if (ActuatorModule != false) hash ^= ActuatorModule.GetHashCode();
      if (BatteryControllSystem != false) hash ^= BatteryControllSystem.GetHashCode();
      if (BatteryPercentage != 0) hash ^= BatteryPercentage.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Connection != false) {
        output.WriteRawTag(16);
        output.WriteBool(Connection);
      }
      if (INS != false) {
        output.WriteRawTag(24);
        output.WriteBool(INS);
      }
      if (Lag != false) {
        output.WriteRawTag(32);
        output.WriteBool(Lag);
      }
      if (Compass != false) {
        output.WriteRawTag(40);
        output.WriteBool(Compass);
      }
      if (PressureSensor != false) {
        output.WriteRawTag(48);
        output.WriteBool(PressureSensor);
      }
      if (EcholotFront != false) {
        output.WriteRawTag(56);
        output.WriteBool(EcholotFront);
      }
      if (EcholotBottom != false) {
        output.WriteRawTag(64);
        output.WriteBool(EcholotBottom);
      }
      if (CV != false) {
        output.WriteRawTag(72);
        output.WriteBool(CV);
      }
      if (SeismicTomography != false) {
        output.WriteRawTag(80);
        output.WriteBool(SeismicTomography);
      }
      if (FloatingDiffSensor != false) {
        output.WriteRawTag(88);
        output.WriteBool(FloatingDiffSensor);
      }
      if (ActuatorModule != false) {
        output.WriteRawTag(96);
        output.WriteBool(ActuatorModule);
      }
      if (BatteryControllSystem != false) {
        output.WriteRawTag(104);
        output.WriteBool(BatteryControllSystem);
      }
      if (BatteryPercentage != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(BatteryPercentage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (Id != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(Id);
      }
      if (Connection != false) {
        output.WriteRawTag(16);
        output.WriteBool(Connection);
      }
      if (INS != false) {
        output.WriteRawTag(24);
        output.WriteBool(INS);
      }
      if (Lag != false) {
        output.WriteRawTag(32);
        output.WriteBool(Lag);
      }
      if (Compass != false) {
        output.WriteRawTag(40);
        output.WriteBool(Compass);
      }
      if (PressureSensor != false) {
        output.WriteRawTag(48);
        output.WriteBool(PressureSensor);
      }
      if (EcholotFront != false) {
        output.WriteRawTag(56);
        output.WriteBool(EcholotFront);
      }
      if (EcholotBottom != false) {
        output.WriteRawTag(64);
        output.WriteBool(EcholotBottom);
      }
      if (CV != false) {
        output.WriteRawTag(72);
        output.WriteBool(CV);
      }
      if (SeismicTomography != false) {
        output.WriteRawTag(80);
        output.WriteBool(SeismicTomography);
      }
      if (FloatingDiffSensor != false) {
        output.WriteRawTag(88);
        output.WriteBool(FloatingDiffSensor);
      }
      if (ActuatorModule != false) {
        output.WriteRawTag(96);
        output.WriteBool(ActuatorModule);
      }
      if (BatteryControllSystem != false) {
        output.WriteRawTag(104);
        output.WriteBool(BatteryControllSystem);
      }
      if (BatteryPercentage != 0) {
        output.WriteRawTag(112);
        output.WriteInt32(BatteryPercentage);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (Id != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(Id);
      }
      if (Connection != false) {
        size += 1 + 1;
      }
      if (INS != false) {
        size += 1 + 1;
      }
      if (Lag != false) {
        size += 1 + 1;
      }
      if (Compass != false) {
        size += 1 + 1;
      }
      if (PressureSensor != false) {
        size += 1 + 1;
      }
      if (EcholotFront != false) {
        size += 1 + 1;
      }
      if (EcholotBottom != false) {
        size += 1 + 1;
      }
      if (CV != false) {
        size += 1 + 1;
      }
      if (SeismicTomography != false) {
        size += 1 + 1;
      }
      if (FloatingDiffSensor != false) {
        size += 1 + 1;
      }
      if (ActuatorModule != false) {
        size += 1 + 1;
      }
      if (BatteryControllSystem != false) {
        size += 1 + 1;
      }
      if (BatteryPercentage != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(BatteryPercentage);
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ANPAAlive other) {
      if (other == null) {
        return;
      }
      if (other.Id != 0) {
        Id = other.Id;
      }
      if (other.Connection != false) {
        Connection = other.Connection;
      }
      if (other.INS != false) {
        INS = other.INS;
      }
      if (other.Lag != false) {
        Lag = other.Lag;
      }
      if (other.Compass != false) {
        Compass = other.Compass;
      }
      if (other.PressureSensor != false) {
        PressureSensor = other.PressureSensor;
      }
      if (other.EcholotFront != false) {
        EcholotFront = other.EcholotFront;
      }
      if (other.EcholotBottom != false) {
        EcholotBottom = other.EcholotBottom;
      }
      if (other.CV != false) {
        CV = other.CV;
      }
      if (other.SeismicTomography != false) {
        SeismicTomography = other.SeismicTomography;
      }
      if (other.FloatingDiffSensor != false) {
        FloatingDiffSensor = other.FloatingDiffSensor;
      }
      if (other.ActuatorModule != false) {
        ActuatorModule = other.ActuatorModule;
      }
      if (other.BatteryControllSystem != false) {
        BatteryControllSystem = other.BatteryControllSystem;
      }
      if (other.BatteryPercentage != 0) {
        BatteryPercentage = other.BatteryPercentage;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Connection = input.ReadBool();
            break;
          }
          case 24: {
            INS = input.ReadBool();
            break;
          }
          case 32: {
            Lag = input.ReadBool();
            break;
          }
          case 40: {
            Compass = input.ReadBool();
            break;
          }
          case 48: {
            PressureSensor = input.ReadBool();
            break;
          }
          case 56: {
            EcholotFront = input.ReadBool();
            break;
          }
          case 64: {
            EcholotBottom = input.ReadBool();
            break;
          }
          case 72: {
            CV = input.ReadBool();
            break;
          }
          case 80: {
            SeismicTomography = input.ReadBool();
            break;
          }
          case 88: {
            FloatingDiffSensor = input.ReadBool();
            break;
          }
          case 96: {
            ActuatorModule = input.ReadBool();
            break;
          }
          case 104: {
            BatteryControllSystem = input.ReadBool();
            break;
          }
          case 112: {
            BatteryPercentage = input.ReadInt32();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            Id = input.ReadInt32();
            break;
          }
          case 16: {
            Connection = input.ReadBool();
            break;
          }
          case 24: {
            INS = input.ReadBool();
            break;
          }
          case 32: {
            Lag = input.ReadBool();
            break;
          }
          case 40: {
            Compass = input.ReadBool();
            break;
          }
          case 48: {
            PressureSensor = input.ReadBool();
            break;
          }
          case 56: {
            EcholotFront = input.ReadBool();
            break;
          }
          case 64: {
            EcholotBottom = input.ReadBool();
            break;
          }
          case 72: {
            CV = input.ReadBool();
            break;
          }
          case 80: {
            SeismicTomography = input.ReadBool();
            break;
          }
          case 88: {
            FloatingDiffSensor = input.ReadBool();
            break;
          }
          case 96: {
            ActuatorModule = input.ReadBool();
            break;
          }
          case 104: {
            BatteryControllSystem = input.ReadBool();
            break;
          }
          case 112: {
            BatteryPercentage = input.ReadInt32();
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class SGRUGroupTrajectory : pb::IMessage<SGRUGroupTrajectory>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<SGRUGroupTrajectory> _parser = new pb::MessageParser<SGRUGroupTrajectory>(() => new SGRUGroupTrajectory());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<SGRUGroupTrajectory> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RubinComm.RubinCommReflection.Descriptor.MessageTypes[21]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SGRUGroupTrajectory() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SGRUGroupTrajectory(SGRUGroupTrajectory other) : this() {
      groupId_ = other.groupId_;
      groupTrajectory_ = other.groupTrajectory_.Clone();
      anpasTrajectory_ = other.anpasTrajectory_.Clone();
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public SGRUGroupTrajectory Clone() {
      return new SGRUGroupTrajectory(this);
    }

    /// <summary>Field number for the "GroupId" field.</summary>
    public const int GroupIdFieldNumber = 1;
    private int groupId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GroupId {
      get { return groupId_; }
      set {
        groupId_ = value;
      }
    }

    /// <summary>Field number for the "GroupTrajectory" field.</summary>
    public const int GroupTrajectoryFieldNumber = 2;
    private static readonly pb::FieldCodec<global::RubinComm.GlobalPos> _repeated_groupTrajectory_codec
        = pb::FieldCodec.ForMessage(18, global::RubinComm.GlobalPos.Parser);
    private readonly pbc::RepeatedField<global::RubinComm.GlobalPos> groupTrajectory_ = new pbc::RepeatedField<global::RubinComm.GlobalPos>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::RepeatedField<global::RubinComm.GlobalPos> GroupTrajectory {
      get { return groupTrajectory_; }
    }

    /// <summary>Field number for the "AnpasTrajectory" field.</summary>
    public const int AnpasTrajectoryFieldNumber = 3;
    private static readonly pbc::MapField<int, global::RubinComm.GlobalPos>.Codec _map_anpasTrajectory_codec
        = new pbc::MapField<int, global::RubinComm.GlobalPos>.Codec(pb::FieldCodec.ForInt32(8, 0), pb::FieldCodec.ForMessage(18, global::RubinComm.GlobalPos.Parser), 26);
    private readonly pbc::MapField<int, global::RubinComm.GlobalPos> anpasTrajectory_ = new pbc::MapField<int, global::RubinComm.GlobalPos>();
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public pbc::MapField<int, global::RubinComm.GlobalPos> AnpasTrajectory {
      get { return anpasTrajectory_; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as SGRUGroupTrajectory);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(SGRUGroupTrajectory other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (GroupId != other.GroupId) return false;
      if(!groupTrajectory_.Equals(other.groupTrajectory_)) return false;
      if (!AnpasTrajectory.Equals(other.AnpasTrajectory)) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (GroupId != 0) hash ^= GroupId.GetHashCode();
      hash ^= groupTrajectory_.GetHashCode();
      hash ^= AnpasTrajectory.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (GroupId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(GroupId);
      }
      groupTrajectory_.WriteTo(output, _repeated_groupTrajectory_codec);
      anpasTrajectory_.WriteTo(output, _map_anpasTrajectory_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (GroupId != 0) {
        output.WriteRawTag(8);
        output.WriteInt32(GroupId);
      }
      groupTrajectory_.WriteTo(ref output, _repeated_groupTrajectory_codec);
      anpasTrajectory_.WriteTo(ref output, _map_anpasTrajectory_codec);
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (GroupId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GroupId);
      }
      size += groupTrajectory_.CalculateSize(_repeated_groupTrajectory_codec);
      size += anpasTrajectory_.CalculateSize(_map_anpasTrajectory_codec);
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(SGRUGroupTrajectory other) {
      if (other == null) {
        return;
      }
      if (other.GroupId != 0) {
        GroupId = other.GroupId;
      }
      groupTrajectory_.Add(other.groupTrajectory_);
      anpasTrajectory_.Add(other.anpasTrajectory_);
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            GroupId = input.ReadInt32();
            break;
          }
          case 18: {
            groupTrajectory_.AddEntriesFrom(input, _repeated_groupTrajectory_codec);
            break;
          }
          case 26: {
            anpasTrajectory_.AddEntriesFrom(input, _map_anpasTrajectory_codec);
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            GroupId = input.ReadInt32();
            break;
          }
          case 18: {
            groupTrajectory_.AddEntriesFrom(ref input, _repeated_groupTrajectory_codec);
            break;
          }
          case 26: {
            anpasTrajectory_.AddEntriesFrom(ref input, _map_anpasTrajectory_codec);
            break;
          }
        }
      }
    }
    #endif

  }

  public sealed partial class ANPAEvent : pb::IMessage<ANPAEvent>
  #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      , pb::IBufferMessage
  #endif
  {
    private static readonly pb::MessageParser<ANPAEvent> _parser = new pb::MessageParser<ANPAEvent>(() => new ANPAEvent());
    private pb::UnknownFieldSet _unknownFields;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pb::MessageParser<ANPAEvent> Parser { get { return _parser; } }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public static pbr::MessageDescriptor Descriptor {
      get { return global::RubinComm.RubinCommReflection.Descriptor.MessageTypes[22]; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    pbr::MessageDescriptor pb::IMessage.Descriptor {
      get { return Descriptor; }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ANPAEvent() {
      OnConstruction();
    }

    partial void OnConstruction();

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ANPAEvent(ANPAEvent other) : this() {
      couldSkip_ = other.couldSkip_;
      isAnpa_ = other.isAnpa_;
      aNPAId_ = other.aNPAId_;
      isGroup_ = other.isGroup_;
      groupId_ = other.groupId_;
      eventType_ = other.eventType_;
      timeStamp_ = other.timeStamp_;
      _unknownFields = pb::UnknownFieldSet.Clone(other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ANPAEvent Clone() {
      return new ANPAEvent(this);
    }

    /// <summary>Field number for the "CouldSkip" field.</summary>
    public const int CouldSkipFieldNumber = 1;
    private bool couldSkip_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool CouldSkip {
      get { return couldSkip_; }
      set {
        couldSkip_ = value;
      }
    }

    /// <summary>Field number for the "IsAnpa" field.</summary>
    public const int IsAnpaFieldNumber = 2;
    private bool isAnpa_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsAnpa {
      get { return isAnpa_; }
      set {
        isAnpa_ = value;
      }
    }

    /// <summary>Field number for the "ANPAId" field.</summary>
    public const int ANPAIdFieldNumber = 3;
    private int aNPAId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int ANPAId {
      get { return aNPAId_; }
      set {
        aNPAId_ = value;
      }
    }

    /// <summary>Field number for the "IsGroup" field.</summary>
    public const int IsGroupFieldNumber = 4;
    private bool isGroup_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool IsGroup {
      get { return isGroup_; }
      set {
        isGroup_ = value;
      }
    }

    /// <summary>Field number for the "GroupId" field.</summary>
    public const int GroupIdFieldNumber = 5;
    private int groupId_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int GroupId {
      get { return groupId_; }
      set {
        groupId_ = value;
      }
    }

    /// <summary>Field number for the "EventType" field.</summary>
    public const int EventTypeFieldNumber = 6;
    private global::RubinComm.EventType eventType_ = global::RubinComm.EventType.SimPreparing;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public global::RubinComm.EventType EventType {
      get { return eventType_; }
      set {
        eventType_ = value;
      }
    }

    /// <summary>Field number for the "TimeStamp" field.</summary>
    public const int TimeStampFieldNumber = 7;
    private ulong timeStamp_;
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public ulong TimeStamp {
      get { return timeStamp_; }
      set {
        timeStamp_ = value;
      }
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override bool Equals(object other) {
      return Equals(other as ANPAEvent);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public bool Equals(ANPAEvent other) {
      if (ReferenceEquals(other, null)) {
        return false;
      }
      if (ReferenceEquals(other, this)) {
        return true;
      }
      if (CouldSkip != other.CouldSkip) return false;
      if (IsAnpa != other.IsAnpa) return false;
      if (ANPAId != other.ANPAId) return false;
      if (IsGroup != other.IsGroup) return false;
      if (GroupId != other.GroupId) return false;
      if (EventType != other.EventType) return false;
      if (TimeStamp != other.TimeStamp) return false;
      return Equals(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override int GetHashCode() {
      int hash = 1;
      if (CouldSkip != false) hash ^= CouldSkip.GetHashCode();
      if (IsAnpa != false) hash ^= IsAnpa.GetHashCode();
      if (ANPAId != 0) hash ^= ANPAId.GetHashCode();
      if (IsGroup != false) hash ^= IsGroup.GetHashCode();
      if (GroupId != 0) hash ^= GroupId.GetHashCode();
      if (EventType != global::RubinComm.EventType.SimPreparing) hash ^= EventType.GetHashCode();
      if (TimeStamp != 0UL) hash ^= TimeStamp.GetHashCode();
      if (_unknownFields != null) {
        hash ^= _unknownFields.GetHashCode();
      }
      return hash;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public override string ToString() {
      return pb::JsonFormatter.ToDiagnosticString(this);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void WriteTo(pb::CodedOutputStream output) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      output.WriteRawMessage(this);
    #else
      if (CouldSkip != false) {
        output.WriteRawTag(8);
        output.WriteBool(CouldSkip);
      }
      if (IsAnpa != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsAnpa);
      }
      if (ANPAId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ANPAId);
      }
      if (IsGroup != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsGroup);
      }
      if (GroupId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(GroupId);
      }
      if (EventType != global::RubinComm.EventType.SimPreparing) {
        output.WriteRawTag(48);
        output.WriteEnum((int) EventType);
      }
      if (TimeStamp != 0UL) {
        output.WriteRawTag(57);
        output.WriteFixed64(TimeStamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(output);
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalWriteTo(ref pb::WriteContext output) {
      if (CouldSkip != false) {
        output.WriteRawTag(8);
        output.WriteBool(CouldSkip);
      }
      if (IsAnpa != false) {
        output.WriteRawTag(16);
        output.WriteBool(IsAnpa);
      }
      if (ANPAId != 0) {
        output.WriteRawTag(24);
        output.WriteInt32(ANPAId);
      }
      if (IsGroup != false) {
        output.WriteRawTag(32);
        output.WriteBool(IsGroup);
      }
      if (GroupId != 0) {
        output.WriteRawTag(40);
        output.WriteInt32(GroupId);
      }
      if (EventType != global::RubinComm.EventType.SimPreparing) {
        output.WriteRawTag(48);
        output.WriteEnum((int) EventType);
      }
      if (TimeStamp != 0UL) {
        output.WriteRawTag(57);
        output.WriteFixed64(TimeStamp);
      }
      if (_unknownFields != null) {
        _unknownFields.WriteTo(ref output);
      }
    }
    #endif

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public int CalculateSize() {
      int size = 0;
      if (CouldSkip != false) {
        size += 1 + 1;
      }
      if (IsAnpa != false) {
        size += 1 + 1;
      }
      if (ANPAId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(ANPAId);
      }
      if (IsGroup != false) {
        size += 1 + 1;
      }
      if (GroupId != 0) {
        size += 1 + pb::CodedOutputStream.ComputeInt32Size(GroupId);
      }
      if (EventType != global::RubinComm.EventType.SimPreparing) {
        size += 1 + pb::CodedOutputStream.ComputeEnumSize((int) EventType);
      }
      if (TimeStamp != 0UL) {
        size += 1 + 8;
      }
      if (_unknownFields != null) {
        size += _unknownFields.CalculateSize();
      }
      return size;
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(ANPAEvent other) {
      if (other == null) {
        return;
      }
      if (other.CouldSkip != false) {
        CouldSkip = other.CouldSkip;
      }
      if (other.IsAnpa != false) {
        IsAnpa = other.IsAnpa;
      }
      if (other.ANPAId != 0) {
        ANPAId = other.ANPAId;
      }
      if (other.IsGroup != false) {
        IsGroup = other.IsGroup;
      }
      if (other.GroupId != 0) {
        GroupId = other.GroupId;
      }
      if (other.EventType != global::RubinComm.EventType.SimPreparing) {
        EventType = other.EventType;
      }
      if (other.TimeStamp != 0UL) {
        TimeStamp = other.TimeStamp;
      }
      _unknownFields = pb::UnknownFieldSet.MergeFrom(_unknownFields, other._unknownFields);
    }

    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    public void MergeFrom(pb::CodedInputStream input) {
    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
      input.ReadRawMessage(this);
    #else
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, input);
            break;
          case 8: {
            CouldSkip = input.ReadBool();
            break;
          }
          case 16: {
            IsAnpa = input.ReadBool();
            break;
          }
          case 24: {
            ANPAId = input.ReadInt32();
            break;
          }
          case 32: {
            IsGroup = input.ReadBool();
            break;
          }
          case 40: {
            GroupId = input.ReadInt32();
            break;
          }
          case 48: {
            EventType = (global::RubinComm.EventType) input.ReadEnum();
            break;
          }
          case 57: {
            TimeStamp = input.ReadFixed64();
            break;
          }
        }
      }
    #endif
    }

    #if !GOOGLE_PROTOBUF_REFSTRUCT_COMPATIBILITY_MODE
    [global::System.Diagnostics.DebuggerNonUserCodeAttribute]
    [global::System.CodeDom.Compiler.GeneratedCode("protoc", null)]
    void pb::IBufferMessage.InternalMergeFrom(ref pb::ParseContext input) {
      uint tag;
      while ((tag = input.ReadTag()) != 0) {
        switch(tag) {
          default:
            _unknownFields = pb::UnknownFieldSet.MergeFieldFrom(_unknownFields, ref input);
            break;
          case 8: {
            CouldSkip = input.ReadBool();
            break;
          }
          case 16: {
            IsAnpa = input.ReadBool();
            break;
          }
          case 24: {
            ANPAId = input.ReadInt32();
            break;
          }
          case 32: {
            IsGroup = input.ReadBool();
            break;
          }
          case 40: {
            GroupId = input.ReadInt32();
            break;
          }
          case 48: {
            EventType = (global::RubinComm.EventType) input.ReadEnum();
            break;
          }
          case 57: {
            TimeStamp = input.ReadFixed64();
            break;
          }
        }
      }
    }
    #endif

  }

  #endregion

}

#endregion Designer generated code
